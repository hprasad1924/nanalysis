#include "jednostki.h"
#include "generatormt.h"
#include "nucleus_data.h"
#include "calg5.h"
#include "util2.h"

using namespace std;


template < class T > 
static inline T pow2 (T x)
{
	return x * x;
}

static inline double bessj0(double x)
{
	if(fabs(x)<0.000001) 
		return cos(x);
	else
		return sin(x)/x;
}


static double MI2(double rms2, double q,double r)
{ 
	double qr=q*r;
	double r2=r*r;
	double cosqr=cos(qr);
	double sinqr=sin(qr);
	return (((((cosqr*qr/6-sinqr/2)*qr-cosqr)*qr+sinqr)*rms2/r2 + sinqr)/r - cosqr*q)/r2;
}


static double MI(double rms2, double q,double r)
{ 
	double qr=q*r;
	double r2=r*r;
	double r3=r2*r;
	double cosqr=cos(qr);
	double sinqr=sin(qr);
	return (-cosqr*qr+sinqr)/r3
		//  + (((cosqr*qr/6-sinqr/2)*qr -cosqr)*qr+sinqr)*rms2/r2/r3;
			+(cosqr*qr*qr-2*cosqr-2*sinqr*qr)/r2/r2/6; 
}

static double prfMI(double t[3], double r)
{ 
	static double const twoPi2=2*Pi*Pi;
	if(r==0) 
		r=0.00001; 
	double rms2=t[0]*t[0];
	return max(0.0, (MI2(rms2,200,r)-MI2(rms2,0.01,r))/twoPi2);
}

///density profile for the HO model 
static double prfHO(double t[3], double r)
{
	double x=r/t[0],x2=x*x; 
	return t[2]*(1+t[1]*x2)*exp(-x2);
}

///density profile for the MHO model
static double prfMHO(double t[3], double r)
{
	double x=r/t[0]; 
	return (t[2]*(1+t[1]*x*x)*exp(-x*x));
}

///density profile for the 2pF model
static double prf2pF(double t[3], double r)
{
	return t[2]/(1.+exp((r-t[0])/t[1]));
}

///density profile for the 3pF model
static double prf3pF(double t[4], double r)
{
	double x=r/t[0];
	return t[3]*
	       (1+t[2]*x*x)
			/(1+exp((r-t[0])/t[1])); 
}

///density profile for the 3pG model
static double prf3pG(double t[4], double r)
{
	double x=r/t[0], x2=x*x;
	return max(0.,t[3]*(1+t[2]*x2)/(1+exp((r*r-t[0]*t[0])/(t[1]*t[1]))));
}

///density profile for the FB model
static double prfFB(double fb[],  double r)
{ 
	if(r>fb[0]) // fb[0]- radius
		return 0;
	double suma=0; 
	double x=Pi*r/fb[0];
	for(int j=1; j<=17 and fb[j] ; j++)
	{   
		suma+=fb[j]*bessj0(j*x);
	}	
	return max(0.,suma);	
}

///density profile for the SOG model
static double prfSOG(double sog[],double r)
{ 
	static const double twoPi32=2*Pi*sqrt(Pi);
	//double rms=sog[0];
	double g=sog[1]/sqrt(1.5);
	double coef=twoPi32*g*g*g;
	double suma=0;
	for(int j=2; j<25 ; j+=2)
	{  
		double Ri=sog[j];
		double Qi=sog[j+1];
		double Ai=Qi/(coef*(1+2*pow2(Ri/g)));

		suma+=Ai*(exp(-pow2((r-Ri)/g))+exp(-pow2((r+Ri)/g)));
	}	
	return max(0.,suma);	
}


static double prfUG(double ug[],double r)
{
	double xi=1.5/ug[0]/ug[0];
	return ug[1]*exp( -r*r*xi);
}
	
	// Uniform Gaussian model 
	static double ug_11_12 [2]= {2.946, 0.296785};
	


	// Harmonic-oscillator model (HO): a, alfa, rho0(calculated)
	static double ho_3_4 [3]= {1.772  , 0.327, 0.151583};
	static double ho_4_5 [3]= {1.776  , 0.631, 0.148229};
	static double ho_5_5 [3]= {1.718  , 0.837, 0.157023};
	static double ho_5_6 [3]= {1.698  , 0.811, 0.182048};
	static double ho_8_8 [3]= {1.83314, 1.544, 0.140667};
	static double ho_8_9 [3]= {1.79818, 1.498, 0.161712};
	static double ho_8_10[3]= {1.84114, 1.513, 0.158419};

	// Modified harmonic-oscillator model (MHO): a, alfa, rho0(calculated)
	static double mho_6_7[3]= {1.6359, 1.40316, 0.171761};
	static double mho_6_8[3]= {1.734 , 1.3812 , 0.156987};
	
	//                        show MI zÅ‚e rms-y
	static double mi_1_0[4]= {0.86212 , 0.36 , 1.18  ,1};
	static double mi_1_1[4]= {2.1166  , 0.21 , 0.77  ,1};
	static double mi_2_1[4]= {1.976   ,	0.45 , 1.92  ,1};
	static double mi_2_2[4]= {1.67114 , 0.51 , 2.01  ,1};


	// Two-parameter Fermi model: c=a    , z=alfa,  rho0(calculated)
	static double _2pF_9_10 [3]= {2.58   ,0.567  ,0.178781};
	static double _2pF_10_10[3]= {2.740  ,0.572  ,0.162248};
	static double _2pF_10_12[3]= {2.782  ,0.549  ,0.176167};
	static double _2pF_12_12[3]= {2.98   ,0.55132,0.161818};
	static double _2pF_12_14[3]= {3.05   ,0.523  ,0.16955 };
	static double _2pF_13_14[3]= {2.84   ,0.569  ,0.201502};
	static double _2pF_18_18[3]= {3.54   ,0.507  ,0.161114};
	static double _2pF_18_22[3]= {3.53   ,0.542  ,0.176112};
	static double _2pF_22_26[3]= {3.84315,0.5885 ,0.163935};
	static double _2pF_23_28[3]= {3.94   ,0.505  ,0.17129 };
	static double _2pF_24_26[3]= {3.941  ,0.5665 ,0.161978};
	static double _2pF_24_28[3]= {4.01015,0.5785 ,0.159698};
	static double _2pF_24_29[3]= {4.000  ,0.557  ,0.165941};
	static double _2pF_25_30[3]= {3.8912 ,0.567  ,0.184036};
	static double _2pF_26_28[3]= {4.074  ,0.536  ,0.162833};
	static double _2pF_26_30[3]= {4.111  ,0.558  ,0.162816};
	static double _2pF_26_32[3]= {4.027  ,0.576  ,0.176406};
	static double _2pF_27_32[3]= {4.158  ,0.575  ,0.164824};
	static double _2pF_29_34[3]= {4.218  ,0.596  ,0.167424};
	static double _2pF_29_36[3]= {4.252  ,0.589  ,0.169715};
	static double _2pF_30_34[3]= {4.285  ,0.584  ,0.164109};
	static double _2pF_30_36[3]= {4.340  ,0.559  ,0.165627};
	static double _2pF_30_38[3]= {4.393  ,0.544  ,0.166314};
	static double _2pF_30_40[3]= {4.426  ,0.551  ,0.167171};
	static double _2pF_32_38[3]= {4.442  ,0.5857 ,0.162741};
	static double _2pF_32_40[3]= {4.452  ,0.5737 ,0.167365};
	static double _2pF_38_50[3]= {4.83   ,0.49611,0.168863};
	static double _2pF_39_50[3]= {4.76   ,0.57129,0.172486};
	static double _2pF_41_52[3]= {4.875  ,0.57329,0.168620};

	static double _2pF_79_118[3]={6.386  ,0.53527, 0.168879}; 
	static double _2pF_Th232a[3]={6.7915 ,0.57115, 0.165272}; 
	static double _2pF_Th232b[3]={6.851  ,0.518  , 0.163042}; 
	static double _2pF_U238a[3]= {6.8054 ,0.60516, 0.167221}; 
	static double _2pF_U238b[3]= {6.874  ,0.556  , 0.164318}; 

	// Three-parameter Fermi model: c=a   , z=alfa,        w, rho0 (calculated)	
	static double   _3pF_7_7[4]= {2.57000 ,0.5052 ,-0.18070 ,0.0127921 };
	static double   _3pF_7_8[4]= {2.33430 ,0.4985 , 0.13930 ,0.011046  };
	static double _3pF_12_12a[4]={3.10833 ,0.6079 ,-0.16330 ,0.00707021};
	static double _3pF_12_12b[4]={3.19234 ,0.6046 ,-0.24920 ,0.00742766};
	static double _3pF_12_13[4]= {3.22500 ,0.5840 ,-0.23634 ,0.00714492};
	static double _3pF_14_14[4]= {3.34090 ,0.5803 ,-0.23390 ,0.00646414};
	static double _3pF_14_15[4]= {3.33812 ,0.5472 ,-0.20312 ,0.00631729};
	static double _3pF_14_16[4]= {3.25221 ,0.5532 ,-0.07822 ,0.00585623};
	static double _3pF_15_16[4]= {3.36925 ,0.5826 ,-0.17324 ,0.00584405};
	static double _3pF_17_18[4]= {3.47632 ,0.5995 ,-0.102   ,0.00489787};
	static double _3pF_17_20[4]= {3.55427 ,0.5885 ,-0.132   ,0.0048052 };
	static double _3pF_19_20[4]= {3.74325 ,0.5856 ,-0.2012  ,0.00451813};
	static double _3pF_20_20[4]= {3.76623 ,0.5865 ,-0.16123 ,0.00424562};
	static double _3pF_20_28[4]= {3.7369  ,0.5245 ,-0.030   ,0.00393303};
	static double _3pF_28_30[4]= {4.3092  ,0.5169 ,-0.1308  ,0.00291728};
	static double _3pF_28_32[4]= {4.4891  ,0.5369 ,-0.2668  ,0.00293736};
	static double _3pF_28_33[4]= {4.4024  ,0.5401 ,-0.1983  ,0.00290083};
	static double _3pF_28_34[4]= {4.4425  ,0.5386 ,-0.2090  ,0.0028575 };
	static double _3pF_28_36[4]= {4.5211  ,0.5278 ,-0.2284  ,0.00277699}; 

	// Three-parameter Gaussian model: c=a, z=alfa,      w , rho0 (calculated)
	static double _3pG_16_16[4]= {2.549   ,2.1911 ,0.16112 ,0.00700992};
	static double _3pG_40_50[4]= {4.434   ,2.5283 ,0.35025 ,0.00184643};
	static double _3pG_40_51[4]= {4.32520 ,2.5813 ,0.43325 ,0.00181638};
	static double _3pG_40_52[4]= {4.45520 ,2.5503 ,0.33425 ,0.00183439};
	static double _3pG_40_54[4]= {4.49420 ,2.5853 ,0.29625 ,0.00182715};
	static double _3pG_40_56[4]= {4.50320 ,2.6023 ,0.34125 ,0.00175563};
	static double _3pG_42_50[4]= {4.6110  ,2.527  ,0.1911  ,0.0018786 };



//H3(1,2)Be84
	static double fb_1_2[18]={3.5, 0.25182e-1, 0.34215e-1, 0.15257e-1,0,0,
								   0,0,0,0,0,
								   0,0,0,0,0,
								   0,0};
//He3(2,1)Re84bs
	static double fb_2_1[18]={5, 0.20020e-1, 0.41934e-1, 0.36254e-1, 0.17941e-1, 0.46608e-2,
								0.46834e-2, 0.52042e-2, 0.38280e-2, 0.25661e-2, 0.14182e-2,
								0.61390e-3, 0.22929e-3};
//C12(6,6)Ca80
	static double fb_6_6a[18]={8.0, 0.15721e-1, 0.38732e-1, 0.36808e-1, 0.14671e-1,-0.43277e-2, 
							   -0.97752e-2,-0.68908e-2,-0.27631e-2,-0.63568e-3, 0.71809e-5,
								0.18441e-3, 0.75066e-4, 0.51069e-4, 0.14308e-4, 0.23170e-5,
								0.68465e-6, 0};
//C12(6,6)Re82
	static double fb_6_6b[18]={8.0,  0.15737e-1, 0.38897e-1, 0.37085e-1, 0.14795e-1,-0.44831e-2,
								  -0.10057e-1,-0.68696e-2,-0.28813e-2,-0.77229e-3, 0.66908e-4, 
								   0.10636e-3,-0.36864e-4,-0.50135e-5, 0.94550e-5,-0.47687e-5,
								   0, 0};
//N15(7,8)Vr86
	static double fb_7_8[18]={7.0, 0.25491e-1, 0.50618e-1, 0.29822e-1, -0.55196e-2, -0.15913e-1, 
							      -0.76184e-2,-0.23992e-2,-0.47940e-3,           0,           0, 
							                0,          0,          0,           0,           0, 
							                0, 	        0};

//O16(8,8)La82
	static double fb_8_8[18]= {8.0, 0.20238e-1, 0.44793e-1, 0.33533e-1, 0.35030e-2,-0.12293e-1, 
								  -0.10329e-1,-0.34036e-2,-0.41627e-3,-0.94435e-3,-0.25771e-3, 
								   0.23759e-3,-0.10603e-3, 0.41480e-4, 0,0,
								   0, 0};
//Al27(13,14)Ro86
	static double fb_13_14[18]={7.0, 0.43418e-1, 0.60298e-1, 0.28950e-2,-0.23522e-1,-0.79791e-2,
								   0.23010e-2, 0.10794e-2, 0.12574e-3,-0.13021e-3, 0.56563e-4,
							      -0.18011e-4, 0.42869e-5, 0, 0, 0,
								   0,0};
								  
//Si28(14,14)Mi82
	static double fb_14_14[18]={8.0, 0.33495e-1, 0.59533e-1, 0.20979e-1,-0.16900e-1,-0.14998e-1,
								  -0.93248e-3, 0.33266e-2, 0.59244e-3,-0.40013e-3, 0.12242e-3,
								  -0.12994e-4,-0.92784e-5, 0.72595e-5,-0.42096e-5, 0,
								  0, 0};
//Si29(14,15)Mi82
	static double fb_14_15[18]={8.0, 0.33521e-1, 0.59679e-1, 0.20593e-1,-0.18646e-1,-0.1655e-1,
								  -0.11922e-2, 0.28025e-2,-0.67353e-4,-0.34619e-3, 0.17611e-3,
								  -0.57173e-5, 0.12371e-4, 0, 0, 0,
								   0, 0};
//Si30(14,16)Mi82
	static double fb_14_16[18]={8.5, 0.28397e-1, 0.54163e-1, 0.25167e-1,-0.12858e-1,-0.17592e-1,
								  -0.46722e-2, 0.24804e-2, 0.14760e-2,-0.30168e-3, 0.48346e-4,
								   0.00000e0, -0.51570e-5, 0.30261e-5, 0, 0,
								   0, 0};
//P31(15,16)Mi82 
	static double fb_15_16[18]={8.0,  0.35305e-1, 0.59642e-1, 0.17274e-1,-0.19303e-1,-0.13545e-1, 
								   0.63209e-3, 0.35462e-2, 0.83653e-3,-0.47904e-3, 0.19099e-3,
								  -0.69611e-4, 0.23196e-4, -0.77780e-5,0,0,
								  0,0};
//S32(16,16)Ry83b
	static double fb_16_16[18]={8.0,  0.37251e-1, 0.60248e-1, 0.14748e-1,-0.18352e-1,-0.10347e-1, 
								   0.30461e-2, 0.35277e-2,-0.39834e-4,-0.97177e-4, 0.92279e-4,
								  -0.51931e-4, 0.22958e-4,-0.86609e-5, 0.28879e-5,-0.86632e-6, 
								   0, 0};
//S34(16,18)Ry83b
	static double fb_16_18[18]={8,0.37036e-1, 0.58506e-1, 0.12082e-1,-0.19022e-1,-0.83421e-2,
								0.45434e-2, 0.28346e-2,-0.52304e-3, 0.27754e-4, 0.59403e-4,
							   -0.42794e-4, 0.20407e-4,-0.79934e-5, 0.27354e-5,-0.83914e-6,
								0, 0};
//S36(16,29)Ry83b
	static double fb_16_20[18]={8,0.37032e-1, 0.57939e-1, 0.10049e-1,-0.19852e-1,-0.67176e-2,
								0.61882e-2, 0.37795e-2,-0.55272e-3,-0.12904e-3, 0.15845e-3,
							   -0.84063e-4, 0.34010e-4,-0.11663e-4, 0.35204e-5, 0.95135e-6,
								0, 0};
//Ar40(18,22)Ot82
	static double fb_18_22[18]={9.0, 0.30451e-1, 0.55337e-1, 0.20203e-1,-0.16765e-1,-0.13578e-1,
								  -0.43204e-4, 0.91988e-3,-0.41205e-3, 0.11971e-3,-0.19801e-4,
								  -0.43204e-5, 0.61205e-5,-0.37803e-5, 0.18001e-5,-0.77407e-6,
							       0, 0};
//Ca40(20,20)Em83b
   static double fb_20_20[18]={8.0,  0.44846e-1, 0.61326e-1,-0.16818e-2,-0.26217e-1,-0.29725e-2,
								   0.85534e-2, 0.35322e-2,-0.48258e-3,-0.39346e-3, 0.20338e-3,
								   0.25461e-4,-0.17794e-4, 0.67394e-5,-0.21033e-5, 0,
								   0,0};
//Ca48(20,24)Em83b
   static double fb_20_24[18]={8.0,  0.44782e-1, 0.59523e-1,-0.74148e-2,-0.29466e-1,-0.28350e-3,
								   0.10829e-1, 0.30465e-2,-0.10237e-2,-0.17830e-3, 0.55391e-4, 
 								  -0.22644e-4, 0.82671e-5,-0.27343e-5, 0.82461e-6,-0.22780e-6, 
								   0,0};
//Ti48(22,26)Se85
   static double fb_22_26[18]={10.0, 0.27850e-1, 0.55432e-1, 0.26369e-1,-0.17091e-1,-0.21798e-1,
							      -0.24889e-2, 0.76631e-2, 0.34554e-2,-0.67477e-3, 0.10764e-3,
							      -0.16564e-5,-0.55566e-5, 0, 0, 0,
							       0, 0};
//Ti48(22,28)Se85
	static double fb_22_28[18]={9.5, 0.31818e-1, 0.58556e-1, 0.19637e-1,-0.24309e-1,-0.18748e-1,
								   0.33741e-2, 0.89961e-2, 0.37954e-2,-0.41238e-3, 0.12540e-3,
								   0, 0, 0, 0, 0, 
								   0, 0};
//Cr50(24,26)Li83c
   static double fb_24_26[18]={9.0,  0.39174e-1, 0.61822e-1, 0.68550e-2,-0.30170e-1,-0.98745e-2,
								   0.87944e-2, 0.68502e-2,-0.93609e-3,-0.24962e-2,-0.15361e-2,
								  -0.73687e-3, 0,0,0,0,
								  0,0};
//Cr52(24,28)Li83c
   static double fb_24_28[18]={9.0,  0.39287e-1, 0.62477e-1, 0.62482e-2,-0.32885e-1,-0.10648e-1,
								   0.10520e-1, 0.85478e-2,-0.24003e-3,-0.20499e-2,-0.12001e-2,
								  -0.56649e-3, 0 ,0 ,0,0,
								   0,0};
//Cr54(24,30)Li83c
	static double fb_24_30[18]={9.0, 0.39002e-1, 0.60305e-1, 0.45845e-2,-0.30723e-1,-0.91355e-2,
								   0.93251e-2, 0.60583e-2,-0.15602e-2,-0.76809e-3, 0.76809e-3, 
								  -0.34804e-3, 0, 0, 0, 0,
								   0, 0};
//Fe54(26,28)Wo76
   static double fb_26_28[18]={9.0,  0.42339e-1, 0.64428e-1, 0.15840e-2,-0.35171e-1,-0.10116e-1,
								   0.12069e-1, 0.62230e-2,-0.12045e-2, 0.13561e-3, 0.10428e-4,
								  -0.16980e-4, 0.91817e-5,-0.39988e-5, 0.15731e-5,-0.57862e-6,
								   0.20186e-6,-0.67892e-7};
//Fe56(26,30)Wo76
   static double fb_26_30[18]={9.0,  0.42018e-1, 0.62337e-1, 0.23995e-3,-0.32776e-1,-0.79941e-2,
								   0.10844e-1, 0.49123e-2,-0.22144e-2,-0.18146e-3, 0.37261e-3,
								  -0.23296e-3, 0.11494e-3,-0.50596e-4, 0.20652e-4,-0.79428e-5,
								   0.28986e-5,-0.10075e-5};
//Fe58(26,32)Wo76
   static double fb_26_32[18]={9.0, 0.41791e-1, 0.60524e-1,-0.14978e-2,-0.31183e-1,-0.58013e-2,
								   0.10611e-1, 0.41629e-2,-0.29045e-5, 0.54106e-3,-0.38689e-3,
								   0.20514e-3,-0.95237e-4, 0.40707e-4,-0.16346e-1, 0.62233e-5,
								  -0.22568e-5, 0.78077e-6};
//Co59(27,32)Sc77
   static double fb_27_32[18]={9.0,  0.43133e-1, 0.61249e-1,-0.32523e-2,-0.32681e-1,-0.49583e-2,
								   0.11494e-1, 0.55428e-2, 0.31398e-3,-0.70578e-4, 0.53725e-5,
								  -0.74650e-6, 0.19793e-5,-0.28059e-5, 0.27183e-5,-0.19454e-5,
								   0.10963e-5,-0.51114e-6};
//Ni58(28,30)Be83
   static double fb_28_30a[18]={9.0,  0.44880e-1, 0.64756e-1,-0.27899e-2,-0.37016e-1,-0.71915e-2,
								   0.13594e-1, 0.66331e-2,-0.14095e-2,-0.10141e-2, 0.38616e-3,
								  -0.13871e-3, 0.47788e-4,-0.15295e-4, 0.59131e-5,-0.67880e-5,
								   0,0};
//Ni58(28,30)Wo76
   static double fb_28_30b[18]={9.0, 0.45030e-1, 0.65044e-1,-0.32843e-2,-0.36241e-1,-0.67442e-2,
                                   0.13146e-1, 0.50903e-2,-0.20787e-2, 0.12901e-3, 0.14828e-3,
                                  -0.11530e-3, 0.60881e-4,-0.27676e-4, 0.11506e-4, 0.44764e-5,
                                   0.16468e-5,-0.57496e-6};
//Ni60(28,32)Be83
   static double fb_28_32a[18]={9.0,  0.44668e-1, 0.63072e-1,-0.42797e-2,-0.34806e-1,-0.48625e-2,
								   0.12794e-1, 0.54401e-2,-0.14075e-2,-0.76976e-3, 0.33487e-3,
								  -0.13141e-3, 0.52132e-4,-0.20394e-4, 0.59131e-5,-0.67880e-5,
								   0,0};
//Ni60(28,32)Wo76
   static double fb_28_32b[18]={9.0,  0.44855e-1, 0.63476e-1,-0.51001e-2,-0.34496e-1,-0.43132e-2,
								   0.12767e-1, 0.49935e-2,-0.92940e-3, 0.28281e-3,-0.76557e-4,
								   0.18677e-4, 0.36855e-5,-0.32276e-6, 0.19843e-6, 0.16275e-6,
								  -0.82891e-7,-0.34896e-7};
//Ni60(28,32)Wo80
   static double fb_28_32c[18]={9.0, 0.44142e-1, 0.62987e-1,-0.49864e-2,-0.34306e-1,-0.44060e-2,
								   0.12810e-1, 0.46914e-2,-0.84373e-3, 0.36928e-3,-0.15003e-3,
								   0.59665e-4,-0.23215e-4, 0.88005e-5,-0.32305e-5, 0.11496e-5,
								  -0.39658e-6, 0.13145e-6};
//Ni62(28,34)Wo76
   static double fb_28_34[18]={9.0,  0.44581e-1, 0.61478e-1,-0.69425e-2,-0.33126e-1,-0.24964e-2,
								   0.12674e-1, 0.37148e-2,-0.20881e-2, 0.30193e-3, 0.57573e-4,
								  -0.77965e-4, 0.46906e-4,-0.22724e-4, 0.98243e-5,-0.39250e-5,
								   0.14732e-5, 0.52344e-6}; 
//Ni64(28,36)Wo76
   static double fb_28_36[18]={9.0,  0.44429e-1, 0.60116e-1,-0.92003e-2,-0.33452e-1,-0.52856e-3,
								   0.13156e-1, 0.35152e-2,-0.21671e-2, 0.46497e-4, 0.25366e-3, 
								  -0.18438e-2, 0.96874e-4,-0.44224e-4, 0.18493e-4,-0.72361e-5,
								  -0.72361e-5,-0.93929e-6}; 
//Cu63(29,34)Sc77
   static double fb_29_34[18]={9.0,  0.45598e-1, 0.60706e-1,-0.78616e-2,-0.31638e-1,-0.14447e-2,
								   0.10953e-1, 0.42578e-2,-0.24224e-3,-0.30067e-3, 0.23903e-3,
								  -0.12910e-3, 0.60195e-4,-0.25755e-4, 0.10332e-4,-0.39330e-5,
								   0.14254e-5,-0.49221e-6};
//Cu65(29,36)Sc77
   static double fb_29_36[18]={9.0,  0.45444e-1, 0.59544e-1,-0.94968e-2,-0.31561e-1, 0.22898e-3,
								   0.11189e-1, 0.37360e-2,-0.64873e-3,-0.51133e-3, 0.43765e-3,
								  -0.24276e-3, 0.11507e-3, 0.11507e-3, 0.20140e-4,-0.76945e-5,
								   0.28055e-5,-0.97411e-6};
//Zn64(30,34)Wo76
   static double fb_30_34[18]={9.0, 0.47038e-1, 0.61536e-1, 0.90045e-2,-0.30669e-1,-0.78705e-3,
								   0.10034e-1, 0.14053e-2,-0.20640e-2, 0.35105e-3, 0.27303e-4,
								  -0.63811e-4, 0.40893e-4,-0.20311e-4, 0.88986e-5,-0.35849e-5,
								   0.13522e-5,-0.38635e-6};
//Zn66(30,36)Wo76
   static double fb_30_36[18]={9.0, 0.46991e-1, 0.60995e-1,-0.96693e-2,-0.30457e-1,-0.53435e-3,
								   0.97083e-2, 0.14091e-2,-0.70813e-3, 0.20809e-3,-0.48275e-4,
								   0.12680e-5, 0.91369e-6,-0.14874e-5, 0.88831e-6,-0.41689e-6,
								   0.17283e-6,-0.65968e-7};
//Zn68(30,38)Wo76 
   static double fb_30_38[18]={9.0,  0.46654e-1, 0.58827e-1,-0.12283e-1,-0.29865e-1, 0.25669e-2,
								   0.10235e-1, 0.31861e-2,-0.17351e-3,-0.42979e-3, 0.33700e-3,
								  -0.18435e-3, 0.87043e-4,-0.37612e-4, 0.15220e-4,-0.58282e-5,
								   0.21230e-5,-0.73709e-6};
//Zn70(30,40)Wo76
   static double fb_30_40[18]={9.0, 0.46363e-1, 0.57130e-1,-0.13877e-1,-0.30030e-1, 0.35341e-2,
								   0.10113e-1, 0.41029e-2, 0.76469e-3,-0.10138e-2, 0.60837e-3,
								  -0.29929e-3, 0.13329e-3,-0.55502e-4, 0.21893e-4,-0.82286e-5,
								   0.29559e-5,-0.10148e-5};
//Ge70(32,38)Ma84
   static double fb_32_38[18]={10.0, 0.38182e-1, 0.60306e-1, 0.64346e-2,-0.29427e-1,-0.95888e-2,
								   0.87849e-2, 0.49187e-2,-0.15189e-2,-0.17385e-2,-0.16794e-3,
								  -0.11746e-3, 0.65768e-4,-0.30691e-4, 0.13051e-5,-0.52251e-5,
								   0,0};
//Ge72(32,40)Ma84 
   static double fb_32_40[18]={10.0, 0.38083e-1, 0.59342e-1, 0.47718e-2,-0.29953e-1,-0.88476e-2,
								   0.96205e-2, 0.47901e-2,-0.16869e-2,-0.15406e-2,-0.97230e-4,
								  -0.47640e-4,-0.15669e-5, 0.67076e-5,-0.44500e-5, 0.22158e-5,
								   0,0};
//Ge74(32,42)Ma84
	static double fb_32_42[18]={10,  0.37989e-1, 0.58298e-1, 0.27406e-2,-0.30666e-1,-0.81505e-2,
								   0.10231e-1, 0.49382e-2,-0.16270e-2,-0.13937e-2, 0.15476e-3,
								   0.14396e-3,-0.73075e-4, 0.31998e-4,-0.12822e-4, 0.48406e-5,
								   0, 0};
//Ge76(32,44)Ma84
	static double fb_32_44[18]={10,  0.37951e-1, 0.57876e-1, 0.15303e-2,-0.31822e-1,-0.76875e-2,
								   0.11237e-1, 0.50780e-2,-0.17293e-2,-0.15523e-2, 0.72439e-4,
								   0.16560e-3,-0.86631e-4, 0.39159e-4,-0.16259e-4, 0.63681e-5,
								   0, 0};
//Sr88(38,40)St76
   static double fb_38_40[18]={9.0,  0.56435e-1, 0.55072e-1,-0.33363e-1,-0.26061e-1, 0.15749e-1,
								   0.75233e-2,-0.55044e-2,-0.23643e-2, 0.39362e-3,-0.22733e-3,
								   0.12519e-3,-0.61176e-4, 0.27243e-4,-0.11285e-4, 0.43997e-5,
								  -0.16248e-5, 0.57053e-6};
//Zr90(40,50)Ro76
   static double fb_40_50[18]={10.0, 0.46188e-1, 0.61795e-1,-0.12315e-1,-0.36915e-1, 0.25175e-2,
                                   0.15234e-1,-0.55146e-3,-0.60631e-2,-0.12198e-2, 0.36200e-3,
                                  -0.16466e-3, 0.53305e-4,-0.50873e-5,-0.85658e-5, 0.86095e-5,
                                   0,0};
//Zr92(40,52)Ro76
   static double fb_40_52[18]={10.0, 0.45939e-1, 0.60104e-1,-0.13341e-1,-0.35106e-1, 0.31760e-2,
								   0.13753e-1,-0.82682e-3,-0.53001e-2,-0.97579e-3, 0.26489e-3,
								  -0.15873e-3, 0.69301e-4,-0.22278e-4, 0.39533e-5, 0.10609e-5,
								   0,0};
//Zr94(40,54)Ro76
   static double fb_40_54[18]={10.0, 0.45798e-1 ,0.59245e-1,-0.13389e-1,-0.33252e-1, 0.39888e-2,
								   0.12750e-1,-0.15793e-2,-0.56692e-2,-0.15698e-2, 0.54394e-4,
								  -0.24032e-4, 0.38401e-4,-0.31690e-4, 0.18481e-4,-0.85367e-5,
								   0,0};
//Mo92(42,50)La86
   static double fb_42_50[18]={12.0, 0.30782e-1, 0.59896e-1, 0.22016e-1,-0.28945e-1,-0.26707e-1,
								   0.40426e-2, 0.14429e-1, 0.31696e-2,-0.63061e-2,-0.45119e-2,
								   0.46236e-3, 0.94909e-3,-0.38930e-3,-0.14808e-3, 0.19622e-3,
								  -0.40197e-4,-0.71949e-4};
//Mo94(42,52)La86
	static double fb_42_52[18]={12,  0.30661e-1, 0.58828e-1, 0.20396e-1,-0.28830e-1,-0.25077e-1, 
								   0.44768e-2, 0.13127e-1, 0.19548e-2,-0.61403e-2,-0.35825e-2, 
								   0.73790e-3, 0.61882e-3,-0.40556e-3,-0.55748e-5,-0.12453e-3, 
								  -0.57812e-4,-0.21657e-4};
//Mo96(42,54)La86
	static double fb_42_54[18]={12,  0.30564e-1, 0.58013e-1, 0.19255e-1,-0.28372e-1,-0.23304e-1, 
								   0.49894e-2, 0.12126e-1, 0.10496e-2,-0.62592e-2,-0.32814e-2, 
								   0.89668e-3, 0.50636e-3,-0.43412e-3, 0.71531e-4, 0.76745e-4,
								  -0.54316e-4, 0.23386e-6};
//Mo98(42,56)Dr75
	static double fb_42_56[18]={12,  0.30483e-1, 0.57207e-1, 0.17888e-1,-0.28388e-1,-0.21778e-1, 
								   0.56780e-2, 0.11236e-1, 0.82176e-3,-0.50390e-2,-0.23877e-2, 
								   0.71492e-3, 0.29839e-3,-0.31408e-3, 0.80177e-3, 0.43682e-4,
								  -0.51394e-4, 0.22293e-4};
//Mo100(42,58)Dr75
	static double fb_42_58[18]={12,  0.30353e-1, 0.56087e-1, 0.16057e-1,-0.28767e-1,-0.20683e-1,
								   0.62429e-2, 0.11058e-1, 0.11502e-2,-0.39395e-2,-0.14978e-2, 
								   0.76350e-3, 0.10554e-3,-0.25658e-3, 0.10964e-3, 0.10015e-4,
								  -0.40341e-4, 0.25744e-4};
//Pd104(46,58)La86
	static double fb_46_58[18]={11,  0.41210e-1, 0.62846e-1,-0.21202e-2,-0.38359e-1,-0.44693e-2,
								   0.16656e-1, 0.36873e-2,-0.57534e-2,-0.32499e-2, 0.69844e-3,
								   0.16304e-2, 0.59882e-3, 0, 0, 0,
								   0, 0};
//Pd106(46,60)La86
	static double fb_46_60[18]={11,  0.41056e-1, 0.61757e-1,-0.29891e-2,-0.37356e-1,-0.35348e-2,
								   0.16085e-1, 0.28502e-2,-0.55764e-2,-0.15433e-2, 0.22281e-2,
								   0.13160e-2, 0.16508e-4, 0, 0, 0,
								   0,0};
//Pd108(46,62)La86
	static double fb_46_62[18]={11,  0.40754e-1, 0.59460e-1,-0.54077e-2,-0.36305e-1,-0.21987e-2,
								   0.15418e-1, 0.25927e-2,-0.52781e-2,-0.19757e-2, 0.10339e-2,
								   0.22891e-3,-0.33464e-3,0, 0, 0,
								   0, 0};
//Pd110(46,64)La86
   static double fb_46_64[18]={11.0,0.40668e-1, 0.58793e-1,-0.61375e-2,-0.35983e-1,-0.17447e-2,
								   0.14998e-1, 0.19994e-2,-0.53170e-2,-0.14289e-2, 0.16033e-2,
								   0.31574e-3,-0.42195e-3,0,0,0,
								   0,0};
//Sm144(62,82)Mo81
   static double fb_62_82[18]={9.25,0.74734e-1, 0.26145e-1,-0.63832e-1, 0.10432e-1, 0.19183e-1,
								  -0.12572e-1,-0.39707e-2,-0.18703e-2, 0.12602e-2,-0.11902e-2,
								  -0.15703e-2,0,0,0,0,
								   0,0};
//Sm148(62,86)Ho80
   static double fb_62_86a[18]={9.5, 0.70491e-1, 0.32601e-1,-0.55421e-1, 0.50111e-2, 0.20216e-1,
								  -0.85944e-2,-0.40106e-2, 0.19303e-2,-0.49689e-3,-0.17040e-3,
								   0,0,0,0,0,
								   0,0};
//Sm148(62,86)Mo81
   static double fb_62_86b[18]={9.25,0.73859e-1, 0.24023e-1,-0.59437e-1, 0.10761e-1, 0.17022e-1,
                                  -0.11401e-1,-0.18102e-2, 0.93011e-3, 0.98012e-3,-0.12601e-2, 
                                  -0.17402e-2,0,0,0,0,
                                   0,0};
//Sm150(62,88)Mo81
   static double fb_62_88[18]={9.25,0.73338e-1, 0.24626e-1,-0.52773e-1, 0.10582e-1, 0.15353e-1,
								  -0.95624e-2,-0.18804e-2,-0.79019e-3, 0.10102e-2,-0.26606e-2,
								  -0.18304e-2,0,0,0,0,
								   0,0};
//Sm152(62,90)Ho80
   static double fb_62_90a[18]={10.5,0.56097e-1, 0.45123e-1,-0.40310e-1,-0.18171e-1, 0.20515e-1,
								   0.49023e-2,-0.67674e-2,-0.18927e-2, 0.15333e-2, 0,
								   0,0,0,0,0,
								   0,0};

//Sm152(62,90)Mo81
   static double fb_62_90b[18]={9.25,0.72646e-1, 0.21824e-1,-0.54112e-1, 0.98321e-2, 0.16213e-1,
								  -0.65614e-2, 0.53611e-2,-0.14103e-2,-0.99022e-3,-0.23005e-2,
								   0,0,0,0,0,
								   0,0};
//Sm154(62,92)Ho80
   static double fb_62_92[18]={10.5,0.55859e-1, 0.44002e-1,-0.40342e-1,-0.17989e-1, 0.19817e-1, 
								   0.51643e-2,-0.60212e-2,-0.23127e-2, 0.47024e-3, 0,
								   0,0,0,0,0,
								   0,0};
//Gd154(64,90)He82
   static double fb_64_90[18]={10.0,0.63832e-1, 0.36983e-1,-0.48193e-1,-0.51046e-2, 0.19805e-1, 
								  -0.82574e-3,-0.46942e-2,0,0,0,
								   0,0,0,0,0,
								   0,0};
//Gd158(64,94)Mu84
   static double fb_64_94[18]={10.5,0.57217e-1, 0.43061e-1,-0.41996e-1,-0.17203e-1, 0.19933e-1, 
								   0.51060e-2,-0.73665e-2,-0.20926e-2, 0.21883e-2,0,
								   0,0,0,0,0,
								   0,0};
//Er166(68,98)Ca78
   static double fb_68_98[18]={11.0,0.54426e-1, 0.47165e-1,-0.38654e-1,-0.19672e-1, 0.22092e-1,
								   0.78708e-2,-0.53005e-2, 0.50005e-3, 0.52005e-3,-0.35003e-3,
								   0.12001e-3,0,0,0,0,
								   0,0};
//Yb174(70,104)Sa79
   static double fb_70_104[18]={11.0,0.54440e-1, 0.40034e-1,-0.45606e-1,-0.20932e-1, 0.20455e-1,
								   0.27061e-2,-0.60489e-2,-0.15918e-3, 0.11938e-2, 0,
								   0,0,0,0,0,
								   0,0};
//Lu175(71,104)Sa79
   static double fb_71_104[18]={11.0,0.55609e-1, 0.42243e-1,-0.45028e-1,-0.19491e-1, 0.22514e-1,
								   0.38982e-2,-0.72395e-2, 0.31822e-3,-0.23866e-3,0,
								   0,0,0,0,0,
								   0,0};
//Os192(76,116)Re84
   static double fb_76_116[18]={11.0,0.59041e-1, 0.41498e-1,-0.49900e-1,-0.10183e-1, 0.29067e-1,
								  -0.57382e-2,-0.92348e-2, 0.36170e-2, 0.28736e-2, 0.24194e-3,
								  -0.16766e-2, 0.73610e-3, 0,0,0,
								  0,0};
//Pt196(78,118)Bo83
   static double fb_78_118[18]={12.0,0.50218e-1, 0.53722e-1,-0.35015e-1,-0.34588e-1, 0.23564e-1,
								   0.14340e-1,-0.13270e-1,-0.51212e-2, 0.56088e-2, 0.14890e-2,
								  -0.10928e-2, 0.55662e-3,-0.50557e-4,-0.19708e-3, 0.24016e-3,
								   0,0};
//Tl203(81,122)Eu78
   static double fb_81_122[18]={12.0,0.51568e-1, 0.51562e-1,-0.39299e-1,-0.30826e-1, 0.27491e-1,
								   0.10795e-1,-0.15922e-1,-0.25527e-2, 0.58548e-2, 0.19324e-3,
								  -0.17925e-3, 0.14307e-3,-0.91669e-4, 0.53497e-4,-0.29492e-4,
								   0.15625e-4,-0.80141e-5};
//Tl205(81,124)Eu78
   static double fb_81_124[18]={12.0,0.51518e-1, 0.51165e-1,-0.39559e-1,-0.30118e-1, 0.27600e-1,
								   0.10412e-1,-0.15725e-1,-0.26546e-2, 0.70184e-2, 0.82116e-3,
								  -0.51805e-3, 0.32560e-3,-0.18670e-3, 0.10202e-3,-0.53857e-4,
								   0.27672e-4,-0.13873e-4};
//Pb204(82,122)Eu78
   static double fb_82_122[18]={12.0,0.52102e-1, 0.51786e-1,-0.39188e-1,-0.29242e-1, 0.28992e-1,
								   0.11040e-1,-0.14591e-1,-0.94917e-3, 0.71349e-2, 0.24780e-3,
								  -0.61656e-3, 0.42335e-3,-0.25250e-3, 0.14106e-3,-0.75446e-4,
								   0.39143e-4,-0.19760e-4};
//Pb206(82,124)Eu78
   static double fb_82_124[18]={12.0,0.52019e-1, 0.51190e-1,-0.39459e-1,-0.28405e-1, 0.28862e-1,
								   0.10685e-1,-0.14550e-1,-0.13519e-2, 0.77624e-2,-0.41882e-4,
								  -0.97010e-3, 0.69611e-3,-0.42410e-3, 0.23857e-3,-0.12828e-3,
								   0.66663e-4,-0.33718e-4};

//Pb207(82,125)Eu78
   static double fb_82_125[18]={12.0,0.51981e-1, 0.51059e-1,-0.39447e-1,-0.28428e-1, 0.28988e-1,
								   0.10329e-1,-0.14029e-1,-0.46728e-3, 0.67984e-2, 0.56905e-3,
								  -0.50430e-3, 0.32796e-3,-0.19157e-3, 0.10565e-3,-0.56200e-4,
								   0.29020e-4,-0.14621e-4};
//Pb208(82,126)Eu78
   static double fb_82_126a[18]={12.0,0.51936e-1, 0.50768e-1,-0.39646e-1,-0.28218e-1, 0.28916e-1,
								   0.98910e-2,-0.14388e-1,-0.98262e-3, 0.72578e-2, 0.82318e-3,
								  -0.14823e-2, 0.13245e-3,-0.84345e-4, 0.48417e-4,-0.26562e-4,
								   0.14035e-4,-0.71863e-5};
//Pb208(82,126)Fr77b
   static double fb_82_126b[18]={11.0,0.62732e-1, 0.38542e-1,-0.55105e-1,-0.26990e-2, 0.31016e-1,
								  -0.99486e-2,-0.93012e-2, 0.76653e-2, 0.20885e-2,-0.17840e-2,
								  -0.74876e-4, 0.32278e-3,-0.11353e-3,0,0,
								   0,0};
//Bi209(83,126)Eu78
   static double fb_83_126[18]={12.0,0.52448e-1, 0.50400e-1,-0.41014e-1,-0.27927e-1, 0.29587e-1,
								   0.98017e-2,-0.14930e-1,-0.31967e-3, 0.77252e-2, 0.57533e-3,
								  -0.82529e-3, 0.25728e-3,-0.11043e-3, 0.51930e-4,-0.24767e-4,
								   0.11863e-4,-0.56554e-5};

// Sum Of Gausians  { rms, RP, R1, Q1,R2, Q2, ...,R12 ,Q12}
//H3(1,2)Ju85s
	static double sog_1_2[26]=
	{
		1.764,0.80,

		0.0, 0.035952,
		0.2, 0.027778,
		0.5, 0.131291,
		0.8, 0.221551,
		1.2, 0.253691,

		1.6, 0.072905,
		2.0, 0.152243,
		2.5, 0.051564,
		3.0, 0.053023,
		0,0, 

		0,0, 
		0,0
	};
//He3(2,1)MC77
	static double sog_2_1[26]=
	{
		1.835, 1.10,

		0.0, 0.000029,
		0.6, 0.606482,
		1.0, 0.066077,
		1.3, 0.000023,
		1.8, 0.204417,

		2.3, 0.115236,
		2.7, 0.000001,
		3.2, 0.006974,
		4.1, 0.000765,
		0,0,

		0,0,
		0,0
	};
//He4(2,2)Si82	
	static double sog_2_2[26]=
	{
		1.6768,1.00,

		0.2, 0.034724,
		0.6, 0.430761,
		0.9, 0.203166,
		1.4, 0.192986,
		1.9, 0.083866,

		2.3, 0.033007,
		2.6, 0.014201,
		3.1, 0.000000,
		3.5, 0.006860,
		4.2, 0.000000,

		4.9, 0.000438,
		5.2, 0.000000
	};
//C12(6,6)Si82
	static double sog_6_6[26]=
	{
		2.4696, 1.20,

		0.0, 0.016690,
		0.4, 0.050325, 
		1.0, 0.128621, 
		1.3, 0.180515, 
		1.7, 0.219097, 

		2.3, 0.278416, 
		2.7, 0.058779,
		3.5, 0.057817, 
		4.3, 0.007739, 
		5.4, 0.002001, 

		6.7, 0.000007,
		0, 0 
	};
//O16(8,8)Si70b
	static double sog_8_8[26]=
	{
		2.711, 1.30,

		0.4, 0.057056,
		1.1, 0.195701,
		1.9, 0.311188,
		2.2, 0.224321,
		2.7, 0.059946,

		3.3, 0.135714,
		4.1, 0.000024,
		4.6, 0.013961,
		5.3, 0.000007,
		5.6, 0.000002,

		5.9, 0.002096,
		6.4, 0.000002
	};
//Mg24(12,12)Li74 
	static double sog_12_12[26]=
	{
		3.027, 1.25,

		0.1, 0.007372,
		0.6, 0.061552,
		1.1, 0.056984,
		1.5, 0.035187,
		1.9, 0.291692,

		2.6, 0.228920,
		3.2, 0.233532,
		4.1, 0.074086,
		4.7, 0.000002,
		5.2, 0.010876,

		6.1, 0.000002, 
		7.0, 0.000002
	};
//Si28(14,14)Li74
	static double sog_14_14[26]=
	{
		3.121, 1.30,

		0.4, 0.033149,
		1.0, 0.106452,
		1.9, 0.206866,
		2.4, 0.286391,
		3.2, 0.250448,

		3.6, 0.056944,
		4.1, 0.016829,
		4.6, 0.039630,
		5.1, 0.000002,
		5.5, 0.000938,

		6.0, 0.000002,
		6.9, 0.002366 
	};
//S32(16,16)Li74
	static double sog_16_16[26]=
	{
		3.258, 1.35, 

		0.4, 0.045356,
		1.1, 0.067478,
		1.7, 0.172560, 
		2.5, 0.324870,
		3.2, 0.254889, 
		
		4.0, 0.101799,
		4.6, 0.022166,
		5.0, 0.002081, 
		5.5, 0.005616,
		6.3, 0.000020,
		
		7.3, 0.000020,
		7.7, 0.003219
	}; 
//K39(19,20)Si74
    static double sog_19_20[26]=
    {
		3.427, 1.45,

		0.4, 0.043308,
		0.9, 0.036283, 
		1.7, 0.110517,
		2.1, 0.147676, 
		2.6, 0.189541, 
		
		3.2, 0.274173,
		3.7, 0.117691,
		4.2, 0.058273,
		4.7, 0.000006,
		5.5, 0.021380,
		
		5.9, 0.000002,
		6.9, 0.001145
	};
//Ca40(20,20)Si79
	static double sog_20_20[26]=
	{
		3.4803, 1.45,

		0.4, 0.042870,
		1.2, 0.056020,
		1.8, 0.167853,
		2.7, 0.317962,
		3.2, 0.155450,
		
		3.6, 0.161897,
		4.3, 0.053763,
		4.6, 0.032612,
		5.4, 0.004803,
		6.3, 0.004541,
		
		6.6, 0.000015,
		8.1, 0.002218
	};
//Ca48(20,28)Si74
	static double sog_20_28[26]=
	{
		3.460, 1.45,
		0.6, 0.063035,
		1.1, 0.011672,
		1.7, 0.064201,
		2.1, 0.203813,
		2.9, 0.259070,
		
		3.4, 0.307899,
		4.3, 0.080585, 
		5.2, 0.008498, 
		5.7, 0.000025,
		6.2, 0.000005,
		
		6.5, 0.000004,
		7.4, 0.001210 
	};
//Ni58(28,30)Ca80b
	static double sog_28_30[26]=
	{
		3.7724, 1.45,
		0.5, 0.035228,
		1.4, 0.065586,
		2.2, 0.174552,
		3.0, 0.199916,
		3.4, 0.232360,

		3.9, 0.118496,
		4.2, 0.099325,
		4.6, 0.029860,
		5.2, 0.044912,
		5.9, 0.000232,

		6.6, 0.000002,
		7.9, 0.000010
	};
//Sn116(50,66)Ca82a
	static double sog_50_66[26]=
	{
		4.6271, 1.60,
		0.1, 0.005727,
		0.7, 0.009643,
		1.3, 0.038209,
		1.8, 0.009466,
		2.3, 0.096665,

		3.1, 0.097840,
		3.8, 0.269373,
		4.8, 0.396671,
		5.5, 0.026390,
		6.1, 0.048157,

		7.1, 0.001367,
		8.1, 0.000509 
	};
//Sn124(50,74)Ca82a
	static double sog_50_74[26]=
	{
		4.6771, 1.60,

		0.1, 0.004877,
		0.7, 0.010685,
		1.3, 0.030309,
		1.8, 0.015857,
		2.3, 0.088927,

		3.1, 0.091917,
		3.8, 0.257379,
		4.8, 0.401877,
		5.5, 0.053646,
		6.1, 0.043193,

		7.1, 0.001319,
		8.1, 0.000036 

	}; 
//Tl205(81,124)Fr83
	static double sog_81_124[26]=
	{
		5.479, 1.70,
		
		0.6, 0.007818,
		1.1, 0.022853,
		2.1, 0.000084,
		2.6, 0.105635,
		3.1, 0.022340,

		3.8, 0.059933,
		4.4, 0.235874,
		5.0, 0.000004,
		5.7, 0.460292,
		6.8, 0.081621,

		7.2, 0.002761,
		8.6, 0.000803
	};
//Pb206(82,124)Fr83
	static double sog_82_124[26]=
	{
		5.490, 1.70,

		0.6, 0.010615,
		1.1, 0.021108,
		2.1, 0.000060,
		2.6, 0.102206,
		3.1, 0.023476,

		3.8, 0.065884,
		4.4, 0.226032,
		5.0, 0.000005,
		5.7, 0.459690,
		6.8, 0.086351,

		7.2, 0.004589,
		8.6, 0.000011
	};
//Pb208(82,126)Fr77a
	static double sog_82_126[26]=
	{
		5.5032, 1.70,

		0.1, 0.003845,
		0.7, 0.009724,
		1.6, 0.033093,
		2.1, 0.000120,
		2.7, 0.083107,

		3.5, 0.080869,
		4.2, 0.139957,
		5.1, 0.260892,
		6.0, 0.336013,
		6.6, 0.033637,

		7.6, 0.018729,
		8.7, 0.000020
	};


nucleus_data dens_data[]=
	{
		nucleus_data( 1,  2, prfFB,  fb_1_2    ),
		nucleus_data( 2,  1, prfFB,  fb_2_1    ),
		nucleus_data( 6,  6, prfFB,  fb_6_6a   ),
		nucleus_data( 6,  6, prfFB,  fb_6_6b   ),
		nucleus_data( 7,  8, prfFB,  fb_7_8    ),
		nucleus_data( 8,  8, prfFB,  fb_8_8    ), 
		nucleus_data(13, 14, prfFB,  fb_13_14  ),  
		nucleus_data(14, 14, prfFB,  fb_14_14  ), 
		nucleus_data(14, 15, prfFB,  fb_14_15  ), 
		nucleus_data(14, 16, prfFB,  fb_14_16  ), 
		nucleus_data(15, 16, prfFB,  fb_15_16  ), 
		nucleus_data(16, 16, prfFB,  fb_16_16  ), 
		nucleus_data(16, 18, prfFB,  fb_16_18  ),
		nucleus_data(16, 20, prfFB,  fb_16_20  ),
		nucleus_data(18, 22, prfFB,  fb_18_22  ), 
		nucleus_data(20, 20, prfFB,  fb_20_20  ), 
		nucleus_data(20, 24, prfFB,  fb_20_24  ), 
		nucleus_data(22, 26, prfFB,  fb_22_26  ), 
		nucleus_data(22, 28, prfFB,  fb_22_28  ),
		nucleus_data(24, 26, prfFB,  fb_24_26  ), 
		nucleus_data(24, 28, prfFB,  fb_24_28  ), 
		nucleus_data(24, 30, prfFB,  fb_24_30  ),
		nucleus_data(26, 28, prfFB,  fb_26_28  ), 
		nucleus_data(26, 30, prfFB,  fb_26_30  ), 
		nucleus_data(26, 32, prfFB,  fb_26_32  ), 
		nucleus_data(27, 32, prfFB,  fb_27_32  ),
		nucleus_data(28, 30, prfFB,  fb_28_30a ), 
		nucleus_data(28, 30, prfFB,  fb_28_30b ),
		nucleus_data(28, 32, prfFB,  fb_28_32a ),
		nucleus_data(28, 32, prfFB,  fb_28_32b ),
		nucleus_data(28, 32, prfFB,  fb_28_32c ),
		nucleus_data(28, 34, prfFB,  fb_28_34  ),
		nucleus_data(28, 36, prfFB,  fb_28_36  ),
		nucleus_data(29, 34, prfFB,  fb_29_34  ),
		nucleus_data(29, 36, prfFB,  fb_29_36  ),
		nucleus_data(30, 34, prfFB,  fb_30_34  ),
		nucleus_data(30, 36, prfFB,  fb_30_36  ),
		nucleus_data(30, 38, prfFB,  fb_30_38  ),
		nucleus_data(30, 40, prfFB,  fb_30_40  ),
		nucleus_data(32, 38, prfFB,  fb_32_38  ),
		nucleus_data(32, 40, prfFB,  fb_32_40  ),
		nucleus_data(32, 42, prfFB,  fb_32_42  ),
		nucleus_data(32, 44, prfFB,  fb_32_44  ),
		nucleus_data(38, 40, prfFB,  fb_38_40  ),
		nucleus_data(40, 50, prfFB,  fb_40_50  ), 
		nucleus_data(40, 52, prfFB,  fb_40_52  ),
		nucleus_data(40, 54, prfFB,  fb_40_54  ),
		nucleus_data(42, 50, prfFB,  fb_42_50  ),
		nucleus_data(42, 52, prfFB,  fb_42_52  ),
		nucleus_data(42, 54, prfFB,  fb_42_54  ),
		nucleus_data(42, 56, prfFB,  fb_42_56  ),
		nucleus_data(42, 58, prfFB,  fb_42_58  ),
		nucleus_data(46, 58, prfFB,  fb_46_58  ),
		nucleus_data(46, 60, prfFB,  fb_46_60  ),
		nucleus_data(46, 62, prfFB,  fb_46_62  ),
		nucleus_data(46, 64, prfFB,  fb_46_64  ),
		nucleus_data(62, 82, prfFB,  fb_62_82  ),
		nucleus_data(62, 86, prfFB,  fb_62_86a ),
		nucleus_data(62, 86, prfFB,  fb_62_86b ),
		nucleus_data(62, 88, prfFB,  fb_62_88  ),
		nucleus_data(62, 90, prfFB,  fb_62_90a ),
		nucleus_data(62, 90, prfFB,  fb_62_90b ),
		nucleus_data(62, 92, prfFB,  fb_62_92  ),
		nucleus_data(64, 90, prfFB,  fb_64_90  ),
		nucleus_data(64, 94, prfFB,  fb_64_94  ),
		nucleus_data(68, 98, prfFB,  fb_68_98  ),
		nucleus_data(70,104, prfFB,  fb_70_104 ),
		nucleus_data(71,104, prfFB,  fb_71_104 ),
		nucleus_data(76,116, prfFB,  fb_76_116 ),
		nucleus_data(78,118, prfFB,  fb_78_118 ),
		nucleus_data(81,122, prfFB,  fb_81_122 ),
		nucleus_data(81,124, prfFB,  fb_81_124 ),
		nucleus_data(82,122, prfFB,  fb_82_122 ),
		nucleus_data(82,124, prfFB,  fb_82_124 ),
		nucleus_data(82,125, prfFB,  fb_82_125 ),
		nucleus_data(82,126, prfFB,  fb_82_126a),
		nucleus_data(82,126, prfFB,  fb_82_126b),
		nucleus_data(83,126, prfFB,  fb_83_126 ),

		nucleus_data( 1,  2, prfSOG, sog_1_2   ),
		nucleus_data( 2,  1, prfSOG, sog_2_1   ),
		nucleus_data( 2,  2, prfSOG, sog_2_2   ),
		nucleus_data( 6,  6, prfSOG, sog_6_6   ),
		nucleus_data( 8,  8, prfSOG, sog_8_8   ),
		nucleus_data(12, 12, prfSOG, sog_12_12 ),
		nucleus_data(14, 14, prfSOG, sog_14_14 ),
		nucleus_data(16, 16, prfSOG, sog_16_16 ),
		nucleus_data(19, 20, prfSOG, sog_19_20 ),
		nucleus_data(20, 20, prfSOG, sog_20_20 ),
		nucleus_data(20, 28, prfSOG, sog_20_28 ),
		nucleus_data(28, 30, prfSOG, sog_28_30 ),
		nucleus_data(50, 66, prfSOG, sog_50_66 ),
		nucleus_data(50, 74, prfSOG, sog_50_74 ),
		nucleus_data(81,124, prfSOG, sog_81_124),
		nucleus_data(82,124, prfSOG, sog_82_124),
		nucleus_data(82,126, prfSOG, sog_82_126),		

		nucleus_data( 3,  4,  prfHO,  ho_3_4   ),
		nucleus_data( 4,  5,  prfHO,  ho_4_5   ),
		nucleus_data( 5,  5,  prfHO,  ho_5_5   ),
		nucleus_data( 5,  6,  prfHO,  ho_5_6   ),
		nucleus_data( 8,  8,  prfHO,  ho_8_8   ),
		nucleus_data( 8,  9,  prfHO,  ho_8_9   ),
		nucleus_data( 8, 10,  prfHO,  ho_8_10  ),

		nucleus_data( 6,  7, prfMHO,  mho_6_7  ),
		nucleus_data( 6,  8, prfMHO,  mho_6_8  ),			

		nucleus_data(7,   7, prf3pF, _3pF_7_7  ),
		nucleus_data(7 ,  8, prf3pF, _3pF_7_8  ),
		nucleus_data(12, 12, prf3pF, _3pF_12_12a),
		nucleus_data(12, 12, prf3pF, _3pF_12_12b),
		nucleus_data(12, 13, prf3pF, _3pF_12_13),
		nucleus_data(14, 14, prf3pF, _3pF_14_14),
		nucleus_data(14, 15, prf3pF, _3pF_14_15),
		nucleus_data(14, 16, prf3pF, _3pF_14_16),
		nucleus_data(15, 16, prf3pF, _3pF_15_16),
		nucleus_data(17, 18, prf3pF, _3pF_17_18),
		nucleus_data(17, 20, prf3pF, _3pF_17_20),
		nucleus_data(19, 20, prf3pF, _3pF_19_20),
		nucleus_data(20, 20, prf3pF, _3pF_20_20),
		nucleus_data(20, 28, prf3pF, _3pF_20_28),
		nucleus_data(28, 30, prf3pF, _3pF_28_30),
		nucleus_data(28, 32, prf3pF, _3pF_28_32),
		nucleus_data(28, 33, prf3pF, _3pF_28_33),
		nucleus_data(28, 34, prf3pF, _3pF_28_34),
		nucleus_data(28, 36, prf3pF, _3pF_28_36),
		nucleus_data(16, 16, prf3pG, _3pG_16_16),
		nucleus_data(40, 50, prf3pG, _3pG_40_50),
		nucleus_data(40, 51, prf3pG, _3pG_40_51),
		nucleus_data(40, 52, prf3pG, _3pG_40_52),
		nucleus_data(40, 54, prf3pG, _3pG_40_54),
		nucleus_data(40, 56, prf3pG, _3pG_40_56),
		nucleus_data(42, 50, prf3pG, _3pG_42_50),

		nucleus_data( 9, 10, prf2pF, _2pF_9_10 ),
		nucleus_data(10, 10, prf2pF, _2pF_10_10),
		nucleus_data(10, 12, prf2pF, _2pF_10_12),
		nucleus_data(12, 12, prf2pF, _2pF_12_12),
		nucleus_data(12, 14, prf2pF, _2pF_12_14),
		nucleus_data(13, 14, prf2pF, _2pF_13_14),
		nucleus_data(18, 18, prf2pF, _2pF_18_18),
		nucleus_data(18, 22, prf2pF, _2pF_18_22),
		nucleus_data(22, 26, prf2pF, _2pF_22_26),
		nucleus_data(23, 28, prf2pF, _2pF_23_28),
		nucleus_data(24, 26, prf2pF, _2pF_24_26),
		nucleus_data(24, 28, prf2pF, _2pF_24_28),
		nucleus_data(24, 29, prf2pF, _2pF_24_29),
		nucleus_data(25, 30, prf2pF, _2pF_25_30),
		nucleus_data(26, 28, prf2pF, _2pF_26_28),
		nucleus_data(26, 30, prf2pF, _2pF_26_30),
		nucleus_data(26, 32, prf2pF, _2pF_26_32),
		nucleus_data(27, 32, prf2pF, _2pF_27_32),
		nucleus_data(29, 34, prf2pF, _2pF_29_34),
		nucleus_data(29, 36, prf2pF, _2pF_29_36),
		nucleus_data(30, 34, prf2pF, _2pF_30_34),
		nucleus_data(30, 36, prf2pF, _2pF_30_36),
		nucleus_data(30, 38, prf2pF, _2pF_30_38),
		nucleus_data(30, 40, prf2pF, _2pF_30_40),
		nucleus_data(32, 38, prf2pF, _2pF_32_38),
		nucleus_data(32, 40, prf2pF, _2pF_32_40),
		nucleus_data(38, 50, prf2pF, _2pF_38_50),
		nucleus_data(39, 50, prf2pF, _2pF_39_50),
		nucleus_data(41, 52, prf2pF, _2pF_41_52),
		
		nucleus_data(79, 118, prf2pF, _2pF_79_118),
		nucleus_data(90, 142, prf2pF, _2pF_Th232a),
		nucleus_data(90, 142, prf2pF, _2pF_Th232b),
		nucleus_data(92, 146, prf2pF, _2pF_U238a),
		nucleus_data(92, 146, prf2pF, _2pF_U238b),

//		nucleus_data( 1,  0,  prfMI, mi_1_0    ),
//		nucleus_data( 1,  1,  prfMI, mi_1_1    ),
//		nucleus_data( 2,  1,  prfMI, mi_2_1    ),
//		nucleus_data( 2,  2,  prfMI, mi_2_2    ),

		nucleus_data( 11,  12, prfUG, ug_11_12    ),

		nucleus_data( 0,  0,      0,          0)
		
		
	};
	
double nucleus_data::dens(double r)
{
    double X=dens_fun(dens_params,r/fermi)/fermi3;
    if(dens_fun==prf3pF 
    || dens_fun==prf3pG 
	|| dens_fun==prfSOG)
       return X*(_p+_n);  
    if(dens_fun==prfFB)
       return X*(_p+_n)/_p;  
    return X;
}

const char*  nucleus_data::name()
{
	//return el[p].name;
	if(dens_fun==prfFB) return " FB";
	if(dens_fun==prfSOG) return "SOG";
	if(dens_fun==prf2pF) return "2pF";
	if(dens_fun==prf3pF) return "3pF";
	if(dens_fun==prf3pG) return "3pG";
	if(dens_fun==prfHO) return " HO";
	if(dens_fun==prfMHO) return "MHO";
	if(dens_fun==prfMI) return " MI";
	if(dens_fun==prfUG) return " UG";
	return "";
}

double nucleus_data::r()
{  
	if(_r==0)
	{
		if(dens_fun==prfFB) 
			return _r=dens_params[0]*fermi;	
		double r0=0;
		double r1=20.0*fermi;
		double oldrs=r1;
		double rs=0;
		double ds0=1e-7*dens(0);
		do
		{ 
			oldrs=rs;
			rs=(r0+r1)/2;
			double ds=dens(rs);
			if(ds>ds0)
				r0=rs;
			else
				r1=rs;
		}
		while(rs!=oldrs); 
		_r=rs;
	}	
	return _r;
}

double nucleus_data::random_r()
{   
	if(_max_rr_dens==0)
	{	
		double R=r(),d=0;
		for(double a=0;a<R;a+=R/100)
			_max_rr_dens=max(_max_rr_dens,a*a*dens(a));
	}
	static	int i=0,j=0;
	++j;
    double r0=r(),r1;
    do
    { 
		++i;
		r1 = r0*frandom(); 
    }
    while ( r1*r1*dens(r1) < frandom ()*_max_rr_dens);
//    cout<<i*1./j<<endl;
    return r1;
}

double nucleus_data::kF()
{
	if(_kF==0)
	{
		_kF=calg5a(makefun(*this,&nucleus_data::kf_helper),0,r())/
			calg5a(makefun(*this,&nucleus_data::dens_helper),0,r())
		    ;
	}
	return _kF;
}

double nucleus_data::Mf()
{
	if(_Mf==0)
	{
//		_Mf=calg5a(makefun(*this,&nucleus_data::mf_helper),0,r())/
//			calg5a(makefun(*this,&nucleus_data::dens_helper),0,r());
		_Mf=Meff(kF());
	}
	return _Mf;
}

	


nucleus_data* best_data(int p, int n)
{ 
	int p0=p,n0=n,x=1000000000;
	nucleus_data *d=dens_data;
	
	for(nucleus_data *data=dens_data; data->p() >0; data++)
	{   
		int x1=pow2(data->p()-p0)+pow2(data->n()-n0)+pow2(data->p()+data->n()-p0-n0);
		if(x1<x) 
		{
			x=x1;
			d=data;
			if(x==0) 
				return data;
		}
	}
	return d;
}
						
double density(double r_,int p, int n)
{  
	double A=p+n; 
	
	if(p>83) ///< for big nuclei use rescaled Pb profile
		return ::density(r_*cbrt((82+126)/A),82,126);

	double r=r_;
	
	nucleus_data *d=best_data(p,n);
	r*=cbrt(A/d->A());  // and scale its size if needed
    return max(d->dens(r),0.);
}



double Meff(double kf)
{
	static const double MEF[3000]= 
	{
		938.919,938.918,938.918,938.918,938.917,938.915,938.913,938.909,938.904,
		938.899,938.891,938.882,938.871,938.858,938.843,938.826,938.806,938.784,
		938.759,938.731,938.699,938.665,938.627,938.585,938.54,938.491,938.437,
		938.38,938.318,938.251,938.179,938.103,938.021,937.935,937.843,937.745,
		937.641,937.532,937.417,937.295,937.167,937.032,936.891,936.743,936.587,
		936.425,936.255,936.077,935.892,935.699,935.498,935.289,935.072,934.845,
		934.611,934.367,934.114,933.853,933.582,933.301,933.011,932.711,932.401,
		932.08,931.75,931.409,931.057,930.695,930.322,929.937,929.541,929.134,
		928.716,928.285,927.843,927.388,926.921,926.442,925.951,925.446,924.929,
		924.399,923.855,923.298,922.728,922.144,921.546,920.934,920.308,919.667,
		919.012,918.343,917.658,916.959,916.245,915.515,914.77,914.009,913.233,
		912.44,911.632,910.807,909.966,909.109,908.235,907.344,906.436,905.511,
		904.568,903.608,902.631,901.635,900.622,899.591,898.541,897.473,896.387,
		895.282,894.157,893.014,891.852,890.671,889.47,888.249,887.009,885.749,
		884.469,883.168,881.848,880.506,879.144,877.762,876.358,874.933,873.488,
		872.02,870.531,869.021,867.489,865.934,864.358,862.76,861.139,859.495,
		857.829,856.14,854.429,852.694,850.936,849.155,847.35,845.521,843.669,
		841.793,839.893,837.969,836.021,834.048,832.051,830.029,827.983,825.911,
		823.815,821.694,819.547,817.375,815.177,812.954,810.706,808.431,806.131,
		803.805,801.452,799.074,796.669,794.237,791.78,789.295,786.784,784.246,
		781.682,779.09,776.472,773.826,771.153,768.453,765.726,762.972,760.19,
		757.38,754.543,751.679,748.787,745.867,742.92,739.944,736.942,733.911,
		730.853,727.767,724.653,721.511,718.341,715.144,711.919,708.667,705.386,
		702.078,698.743,695.38,691.99,688.572,685.127,681.654,678.155,674.628,
		671.075,667.495,663.889,660.256,656.596,652.911,649.2,645.463,641.701,
		637.913,634.101,630.264,626.402,622.516,618.607,614.674,610.718,606.74,
		602.739,598.716,594.671,590.606,586.52,582.414,578.288,574.144,569.981,
		565.8,561.603,557.388,553.158,548.913,544.653,540.38,536.093,531.795,
		527.486,523.166,518.837,514.499,510.154,505.802,501.445,497.083,492.718,
		488.351,483.983,479.615,475.248,470.883,466.522,462.166,457.816,453.474,
		449.14,444.817,440.505,436.205,431.92,427.65,423.397,419.162,414.947,
		410.752,406.579,402.43,398.305,394.206,390.134,386.091,382.077,378.094,
		374.142,370.223,366.338,362.488,358.673,354.895,351.154,347.452,343.788,
		340.163,336.579,333.035,329.532,326.071,322.652,319.275,315.94,312.648,
		309.399,306.193,303.03,299.91,296.833,293.799,290.808,287.859,284.953,
		282.088,279.266,276.485,273.746,271.048,268.39,265.772,263.193,260.655,
		258.154,255.692,253.268,250.881,248.531,246.217,243.939,241.696,239.488,
		237.313,235.172,233.065,230.989,228.946,226.933,224.952,223,221.079,
		219.186,217.323,215.487,213.679,211.898,210.143,208.415,206.712,205.034,
		203.381,201.752,200.146,198.564,197.005,195.467,193.952,192.459,190.986,
		189.534,188.102,186.69,185.298,183.925,182.57,181.234,179.916,178.616,
		177.333,176.066,174.817,173.584,172.367,171.166,169.98,168.81,167.654,
		166.513,165.386,164.274,163.175,162.09,161.018,159.959,158.913,157.88,
		156.859,155.85,154.853,153.868,152.894,151.932,150.981,150.041,149.111,
		148.192,147.284,146.385,145.497,144.618,143.75,142.89,142.04,141.2,
		140.368,139.545,138.731,137.926,137.129,136.34,135.56,134.788,134.023,
		133.267,132.518,131.777,131.043,130.317,129.597,128.885,128.18,127.482,
		126.791,126.106,125.428,124.757,124.092,123.433,122.78,122.134,121.493,
		120.859,120.23,119.607,118.99,118.379,117.773,117.173,116.578,115.988,
		115.403,114.824,114.25,113.68,113.116,112.557,112.002,111.453,110.908,
		110.367,109.831,109.3,108.773,108.251,107.733,107.219,106.709,106.204,
		105.703,105.206,104.712,104.223,103.738,103.257,102.779,102.305,101.836,
		101.369,100.907,100.448,99.9921,99.5401,99.0916,98.6466,98.205,97.7667,
		97.3317,96.9001,96.4716,96.0464,95.6243,95.2054,94.7896,94.3768,93.9671,
		93.5604,93.1566,92.7557,92.3578,91.9627,91.5704,91.181,90.7943,90.4104,
		90.0292,89.6506,89.2748,88.9015,88.5308,88.1628,87.7972,87.4342,87.0737,
		86.7156,86.36,86.0068,85.656,85.3075,84.9614,84.6177,84.2762,83.937,
		83.6,83.2653,82.9327,82.6024,82.2742,81.9482,81.6242,81.3024,80.9827,
		80.665,80.3494,80.0357,79.7241,79.4145,79.1068,78.8011,78.4972,78.1953,
		77.8953,77.5972,77.3009,77.0065,76.7138,76.423,76.134,75.8467,75.5612,
		75.2775,74.9954,74.7151,74.4365,74.1595,73.8842,73.6105,73.3385,73.0681,
		72.7993,72.5321,72.2665,72.0025,71.7399,71.479,71.2195,70.9616,70.7051,
		70.4502,70.1967,69.9447,69.6941,69.445,69.1972,68.9509,68.706,68.4625,
		68.2204,67.9796,67.7402,67.5021,67.2653,67.0299,66.7958,66.563,66.3314,
		66.1012,65.8722,65.6445,65.418,65.1928,64.9687,64.746,64.5244,64.304,
		64.0848,63.8668,63.65,63.4343,63.2198,63.0064,62.7941,62.583,62.373,
		62.1641,61.9564,61.7497,61.5441,61.3395,61.1361,60.9337,60.7323,60.532,
		60.3328,60.1345,59.9373,59.7411,59.5459,59.3517,59.1585,58.9663,58.7751,
		58.5848,58.3955,58.2071,58.0197,57.8333,57.6478,57.4632,57.2795,57.0968,
		56.9149,56.734,56.5539,56.3748,56.1965,56.0191,55.8426,55.6669,55.4921,
		55.3182,55.1451,54.9728,54.8014,54.6308,54.4611,54.2921,54.124,53.9567,
		53.7902,53.6244,53.4595,53.2954,53.132,52.9694,52.8076,52.6465,52.4863,
		52.3267,52.1679,52.0099,51.8526,51.696,51.5402,51.3851,51.2307,51.077,
		50.924,50.7718,50.6202,50.4694,50.3192,50.1697,50.021,49.8728,49.7254,
		49.5786,49.4326,49.2871,49.1423,48.9982,48.8548,48.7119,48.5698,48.4282,
		48.2873,48.147,48.0074,47.8683,47.7299,47.5921,47.4549,47.3184,47.1824,
		47.047,46.9122,46.778,46.6444,46.5114,46.379,46.2471,46.1158,45.9851,
		45.855,45.7254,45.5964,45.4679,45.34,45.2126,45.0858,44.9595,44.8338,
		44.7086,44.584,44.4598,44.3362,44.2132,44.0906,43.9686,43.8471,43.7261,
		43.6056,43.4856,43.3661,43.2471,43.1286,43.0107,42.8932,42.7761,42.6596,
		42.5436,42.428,42.313,42.1984,42.0842,41.9706,41.8574,41.7446,41.6324,
		41.5206,41.4092,41.2983,41.1879,41.0779,40.9683,40.8592,40.7506,40.6424,
		40.5346,40.4272,40.3203,40.2138,40.1078,40.0021,39.8969,39.7921,39.6877,
		39.5838,39.4802,39.3771,39.2744,39.1721,39.0701,38.9686,38.8675,38.7668,
		38.6665,38.5666,38.467,38.3679,38.2691,38.1708,38.0728,37.9752,37.8779,
		37.7811,37.6846,37.5885,37.4928,37.3974,37.3024,37.2078,37.1135,37.0196,
		36.9261,36.8329,36.7401,36.6476,36.5555,36.4637,36.3723,36.2812,36.1904,
		36.1001,36.01,35.9203,35.8309,35.7419,35.6532,35.5648,35.4768,35.3891,
		35.3017,35.2146,35.1279,35.0415,34.9554,34.8697,34.7842,34.6991,34.6143,
		34.5297,34.4456,34.3617,34.2781,34.1948,34.1119,34.0292,33.9468,33.8648,
		33.783,33.7016,33.6204,33.5395,33.459,33.3787,33.2987,33.219,33.1396,
		33.0604,32.9816,32.903,32.8248,32.7468,32.669,32.5916,32.5144,32.4375,
		32.3609,32.2846,32.2085,32.1327,32.0572,31.9819,31.9069,31.8322,31.7577,
		31.6835,31.6096,31.5359,31.4624,31.3893,31.3164,31.2437,31.1713,31.0991,
		31.0272,30.9556,30.8842,30.813,30.7421,30.6715,30.601,30.5309,30.4609,
		30.3912,30.3218,30.2526,30.1836,30.1149,30.0463,29.9781,29.91,29.8422,
		29.7747,29.7073,29.6402,29.5733,29.5067,29.4402,29.374,29.308,29.2423,
		29.1767,29.1114,29.0463,28.9814,28.9168,28.8523,28.7881,28.7241,28.6603,
		28.5967,28.5333,28.4701,28.4072,28.3444,28.2819,28.2196,28.1574,28.0955,
		28.0338,27.9723,27.911,27.8499,27.789,27.7283,27.6678,27.6075,27.5473,
		27.4874,27.4277,27.3682,27.3088,27.2497,27.1908,27.132,27.0734,27.0151,
		26.9569,26.8989,26.8411,26.7835,26.726,26.6688,26.6117,26.5548,26.4981,
		26.4416,26.3852,26.3291,26.2731,26.2173,26.1617,26.1062,26.0509,25.9959,
		25.9409,25.8862,25.8316,25.7772,25.723,25.6689,25.615,25.5613,25.5078,
		25.4544,25.4012,25.3481,25.2952,25.2425,25.19,25.1376,25.0853,25.0333,
		24.9814,24.9296,24.8781,24.8267,24.7754,24.7243,24.6734,24.6226,24.5719,
		24.5215,24.4711,24.421,24.371,24.3211,24.2714,24.2219,24.1725,24.1232,
		24.0741,24.0252,23.9764,23.9277,23.8792,23.8309,23.7827,23.7346,23.6867,
		23.6389,23.5913,23.5438,23.4965,23.4493,23.4022,23.3553,23.3085,23.2619,
		23.2154,23.1691,23.1228,23.0768,23.0308,22.985,22.9394,22.8938,22.8484,
		22.8032,22.758,22.713,22.6682,22.6235,22.5789,22.5344,22.4901,22.4459,
		22.4018,22.3579,22.314,22.2704,22.2268,22.1834,22.1401,22.0969,22.0538,
		22.0109,21.9681,21.9254,21.8829,21.8405,21.7982,21.756,21.7139,21.672,
		21.6302,21.5885,21.5469,21.5055,21.4641,21.4229,21.3818,21.3408,21.3,
		21.2592,21.2186,21.1781,21.1377,21.0974,21.0572,21.0172,20.9772,20.9374,
		20.8977,20.8581,20.8186,20.7792,20.74,20.7008,20.6618,20.6229,20.584,
		20.5453,20.5067,20.4682,20.4298,20.3916,20.3534,20.3153,20.2774,20.2395,
		20.2018,20.1641,20.1266,20.0892,20.0518,20.0146,19.9775,19.9405,19.9035,
		19.8667,19.83,19.7934,19.7569,19.7205,19.6842,19.648,19.6119,19.5759,
		19.54,19.5041,19.4684,19.4328,19.3973,19.3619,19.3266,19.2913,19.2562,
		19.2212,19.1862,19.1514,19.1166,19.082,19.0474,19.0129,18.9786,18.9443,
		18.9101,18.876,18.842,18.8081,18.7742,18.7405,18.7069,18.6733,18.6399,
		18.6065,18.5732,18.54,18.5069,18.4739,18.441,18.4081,18.3754,18.3427,
		18.3101,18.2776,18.2452,18.2129,18.1807,18.1485,18.1165,18.0845,18.0526,
		18.0208,17.989,17.9574,17.9258,17.8944,17.863,17.8317,17.8004,17.7693,
		17.7382,17.7072,17.6763,17.6455,17.6147,17.5841,17.5535,17.523,17.4926,
		17.4622,17.432,17.4018,17.3717,17.3416,17.3117,17.2818,17.252,17.2223,
		17.1926,17.163,17.1335,17.1041,17.0748,17.0455,17.0163,16.9872,16.9582,
		16.9292,16.9003,16.8715,16.8427,16.814,16.7854,16.7569,16.7284,16.7001,
		16.6717,16.6435,16.6153,16.5872,16.5592,16.5313,16.5034,16.4755,16.4478,
		16.4201,16.3925,16.365,16.3375,16.3101,16.2828,16.2555,16.2283,16.2012,
		16.1741,16.1472,16.1202,16.0934,16.0666,16.0399,16.0132,15.9866,15.9601,
		15.9336,15.9072,15.8809,15.8546,15.8285,15.8023,15.7763,15.7502,15.7243,
		15.6984,15.6726,15.6469,15.6212,15.5956,15.57,15.5445,15.5191,15.4937,
		15.4684,15.4431,15.4179,15.3928,15.3678,15.3428,15.3178,15.2929,15.2681,
		15.2433,15.2186,15.194,15.1694,15.1449,15.1204,15.096,15.0717,15.0474,
		15.0232,14.999,14.9749,14.9508,14.9268,14.9029,14.879,14.8552,14.8314,
		14.8077,14.7841,14.7605,14.7369,14.7134,14.69,14.6666,14.6433,14.6201,
		14.5969,14.5737,14.5506,14.5276,14.5046,14.4816,14.4588,14.4359,14.4132,
		14.3904,14.3678,14.3452,14.3226,14.3001,14.2777,14.2553,14.2329,14.2106,
		14.1884,14.1662,14.144,14.122,14.0999,14.0779,14.056,14.0341,14.0123,
		13.9905,13.9688,13.9471,13.9255,13.9039,13.8824,13.8609,13.8395,13.8181,
		13.7968,13.7755,13.7543,13.7331,13.7119,13.6909,13.6698,13.6488,13.6279,
		13.607,13.5861,13.5654,13.5446,13.5239,13.5032,13.4826,13.4621,13.4416,
		13.4211,13.4007,13.3803,13.36,13.3397,13.3195,13.2993,13.2791,13.259,
		13.239,13.219,13.199,13.1791,13.1592,13.1394,13.1196,13.0999,13.0802,
		13.0605,13.0409,13.0214,13.0018,12.9824,12.9629,12.9436,12.9242,12.9049,
		12.8857,12.8664,12.8473,12.8281,12.8091,12.79,12.771,12.7521,12.7331,
		12.7143,12.6954,12.6766,12.6579,12.6392,12.6205,12.6019,12.5833,12.5648,
		12.5463,12.5278,12.5094,12.491,12.4726,12.4543,12.4361,12.4179,12.3997,
		12.3815,12.3634,12.3454,12.3274,12.3094,12.2914,12.2735,12.2557,12.2378,
		12.22,12.2023,12.1846,12.1669,12.1493,12.1317,12.1141,12.0966,12.0791,
		12.0617,12.0443,12.0269,12.0096,11.9923,11.975,11.9578,11.9406,11.9235,
		11.9064,11.8893,11.8723,11.8553,11.8383,11.8214,11.8045,11.7876,11.7708,
		11.754,11.7373,11.7206,11.7039,11.6872,11.6706,11.6541,11.6375,11.621,
		11.6046,11.5881,11.5717,11.5554,11.5391,11.5228,11.5065,11.4903,11.4741,
		11.4579,11.4418,11.4257,11.4097,11.3937,11.3777,11.3617,11.3458,11.3299,
		11.3141,11.2983,11.2825,11.2667,11.251,11.2353,11.2197,11.204,11.1885,
		11.1729,11.1574,11.1419,11.1264,11.111,11.0956,11.0802,11.0649,11.0496,
		11.0343,11.0191,11.0039,10.9887,10.9736,10.9585,10.9434,10.9283,10.9133,
		10.8983,10.8834,10.8684,10.8535,10.8387,10.8238,10.809,10.7943,10.7795,
		10.7648,10.7501,10.7355,10.7208,10.7063,10.6917,10.6772,10.6626,10.6482,
		10.6337,10.6193,10.6049,10.5906,10.5762,10.5619,10.5477,10.5334,10.5192,
		10.505,10.4909,10.4767,10.4626,10.4486,10.4345,10.4205,10.4065,10.3925,
		10.3786,10.3647,10.3508,10.337,10.3232,10.3094,10.2956,10.2819,10.2682,
		10.2545,10.2408,10.2272,10.2136,10.2,10.1865,10.173,10.1595,10.146,
		10.1326,10.1191,10.1058,10.0924,10.0791,10.0658,10.0525,10.0392,10.026,
		10.0128,9.99961,9.98646,9.97333,9.96024,9.94716,9.93411,9.92109,9.90809,
		9.89512,9.88218,9.86926,9.85636,9.84349,9.83065,9.81783,9.80503,9.79226,
		9.77952,9.76679,9.7541,9.74143,9.72878,9.71616,9.70356,9.69099,9.67844,
		9.66592,9.65342,9.64094,9.62849,9.61606,9.60366,9.59128,9.57892,9.56659,
		9.55428,9.542,9.52973,9.5175,9.50528,9.49309,9.48093,9.46878,9.45666,
		9.44456,9.43249,9.42044,9.40841,9.3964,9.38442,9.37246,9.36052,9.34861,
		9.33672,9.32485,9.313,9.30118,9.28938,9.2776,9.26584,9.25411,9.2424,
		9.23071,9.21904,9.20739,9.19577,9.18417,9.17259,9.16103,9.14949,9.13798,
		9.12649,9.11502,9.10357,9.09214,9.08073,9.06935,9.05798,9.04664,9.03532,
		9.02402,9.01274,9.00148,8.99024,8.97903,8.96783,8.95666,8.9455,8.93437,
		8.92326,8.91217,8.9011,8.89005,8.87902,8.86801,8.85702,8.84605,8.8351,
		8.82417,8.81327,8.80238,8.79151,8.78066,8.76984,8.75903,8.74824,8.73747,
		8.72673,8.716,8.70529,8.6946,8.68393,8.67328,8.66265,8.65204,8.64145,
		8.63088,8.62033,8.6098,8.59928,8.58879,8.57831,8.56786,8.55742,8.547,
		8.5366,8.52622,8.51586,8.50552,8.49519,8.48489,8.4746,8.46433,8.45409,
		8.44385,8.43364,8.42345,8.41327,8.40312,8.39298,8.38286,8.37276,8.36267,
		8.35261,8.34256,8.33253,8.32252,8.31253,8.30255,8.29259,8.28265,8.27273,
		8.26283,8.25294,8.24307,8.23322,8.22339,8.21357,8.20378,8.194,8.18423,
		8.17449,8.16476,8.15505,8.14535,8.13568,8.12602,8.11637,8.10675,8.09714,
		8.08755,8.07797,8.06842,8.05888,8.04935,8.03985,8.03036,8.02088,8.01143,
		8.00199,7.99257,7.98316,7.97377,7.9644,7.95504,7.9457,7.93637,7.92707,
		7.91777,7.9085,7.89924,7.89,7.88077,7.87156,7.86237,7.85319,7.84403,
		7.83488,7.82575,7.81664,7.80754,7.79846,7.78939,7.78034,7.7713,7.76228,
		7.75328,7.74429,7.73532,7.72636,7.71742,7.70849,7.69958,7.69069,7.68181,
		7.67294,7.66409,7.65526,7.64644,7.63764,7.62885,7.62008,7.61132,7.60257,
		7.59385,7.58513,7.57643,7.56775,7.55908,7.55043,7.54179,7.53317,7.52456,
		7.51596,7.50738,7.49882,7.49027,7.48173,7.47321,7.4647,7.45621,7.44773,
		7.43927,7.43082,7.42238,7.41396,7.40556,7.39717,7.38879,7.38042,7.37208,
		7.36374,7.35542,7.34711,7.33882,7.33054,7.32228,7.31402,7.30579,7.29756,
		7.28935,7.28116,7.27298,7.26481,7.25665,7.24851,7.24039,7.23227,7.22417,
		7.21609,7.20801,7.19995,7.19191,7.18388,7.17586,7.16785,7.15986,7.15188,
		7.14392,7.13596,7.12802,7.1201,7.11219,7.10429,7.0964,7.08853,7.08067,
		7.07282,7.06499,7.05716,7.04936,7.04156,7.03378,7.02601,7.01825,7.01051,
		7.00278,6.99506,6.98735,6.97966,6.97198,6.96431,6.95666,6.94902,6.94139,
		6.93377,6.92616,6.91857,6.91099,6.90343,6.89587,6.88833,6.8808,6.87328,
		6.86577,6.85828,6.8508,6.84333,6.83587,6.82843,6.821,6.81358,6.80617,
		6.79877,6.79139,6.78401,6.77665,6.76931,6.76197,6.75464,6.74733,6.74003,
		6.73274,6.72546,6.7182,6.71095,6.7037,6.69647,6.68925,6.68205,6.67485,
		6.66767,6.6605,6.65334,6.64619,6.63905,6.63192,6.62481,6.6177,6.61061,
		6.60353,6.59646,6.58941,6.58236,6.57532,6.5683,6.56129,6.55428,6.54729,
		6.54032,6.53335,6.52639,6.51944,6.51251,6.50559,6.49867,6.49177,6.48488,
		6.478,6.47113,6.46427,6.45742,6.45059,6.44376,6.43695,6.43014,6.42335,
		6.41657,6.4098,6.40304,6.39629,6.38955,6.38282,6.3761,6.36939,6.36269,
		6.35601,6.34933,6.34266,6.33601,6.32936,6.32273,6.3161,6.30949,6.30289,
		6.29629,6.28971,6.28314,6.27658,6.27002,6.26348,6.25695,6.25043,6.24392,
		6.23742,6.23093,6.22445,6.21798,6.21152,6.20507,6.19862,6.19219,6.18577,
		6.17936,6.17296,6.16657,6.16019,6.15382,6.14746,6.14111,6.13477,6.12844,
		6.12211,6.1158,6.1095,6.10321,6.09692,6.09065,6.08439,6.07813,6.07189,
		6.06565,6.05943,6.05321,6.04701,6.04081,6.03462,6.02845,6.02228,6.01612,
		6.00997,6.00383,5.9977,5.99158,5.98547,5.97937,5.97327,5.96719,5.96111,
		5.95505,5.94899,5.94295,5.93691,5.93088,5.92486,5.91885,5.91285,5.90686,
		5.90087,5.8949,5.88894,5.88298,5.87703,5.8711,5.86517,5.85925,5.85334,
		5.84744,5.84154,5.83566,5.82978,5.82392,5.81806,5.81221,5.80637,5.80054,
		5.79472,5.7889,5.7831,5.7773,5.77152,5.76574,5.75997,5.75421,5.74845,
		5.74271,5.73697,5.73125,5.72553,5.71982,5.71412,5.70842,5.70274,5.69706,
		5.69139,5.68574,5.68008,5.67444,5.66881,5.66318,5.65757,5.65196,5.64636,
		5.64076,5.63518,5.6296,5.62404,5.61848,5.61293,5.60738,5.60185,5.59632,
		5.59081,5.5853,5.57979,5.5743,5.56881,5.56334,5.55787,5.55241,5.54695,
		5.54151,5.53607,5.53064,5.52522,5.5198,5.5144,5.509,5.50361,5.49823,
		5.49286,5.48749,5.48213,5.47678,5.47144,5.4661,5.46078,5.45546,5.45014,
		5.44484,5.43954,5.43426,5.42898,5.4237,5.41844,5.41318,5.40793,5.40269,
		5.39745,5.39223,5.38701,5.38179,5.37659,5.37139,5.3662,5.36102,5.35585,
		5.35068,5.34552,5.34037,5.33522,5.33008,5.32496,5.31983,5.31472,5.30961,
		5.30451,5.29942,5.29433,5.28925,5.28418,5.27912,5.27406,5.26901,5.26397,
		5.25893,5.25391,5.24889,5.24387,5.23887,5.23387,5.22888,5.22389,5.21891,
		5.21394,5.20898,5.20402,5.19907,5.19413,5.1892,5.18427,5.17935,5.17443,
		5.16952,5.16462,5.15973,5.15484,5.14997,5.14509,5.14023,5.13537,5.13052,
		5.12567,5.12083,5.116,5.11118,5.10636,5.10155,5.09674,5.09195,5.08716,
		5.08237,5.0776,5.07283,5.06806,5.0633,5.05855,5.05381,5.04907,5.04434,
		5.03962,5.0349,5.03019,5.02549,5.02079,5.0161,5.01142,5.00674,5.00207,
		4.9974,4.99274,4.98809,4.98345,4.97881,4.97418,4.96955,4.96493,4.96032,
		4.95571,4.95111,4.94652,4.94193,4.93735,4.93278,4.92821,4.92365,4.91909,
		4.91454,4.91,4.90546,4.90093,4.89641,4.89189,4.88738,4.88287,4.87837,
		4.87388,4.8694,4.86491,4.86044,4.85597,4.85151,4.84705,4.8426,4.83816,
		4.83372,4.82929,4.82487,4.82045,4.81603,4.81163,4.80723,4.80283,4.79844,
		4.79406,4.78968,4.78531,4.78094,4.77658,4.77223,4.76788,4.76354,4.75921,
		4.75488,4.75055,4.74624,4.74192,4.73762,4.73332,4.72902,4.72474,4.72045,
		4.71618,4.7119,4.70764,4.70338,4.69913,4.69488,4.69064,4.6864,4.68217,
		4.67794,4.67372,4.66951,4.6653,4.6611,4.6569,4.65271,4.64853,4.64435,
		4.64017,4.636,4.63184,4.62768,4.62353,4.61939,4.61525,4.61111,4.60698,
		4.60286,4.59874,4.59463,4.59052,4.58642,4.58232,4.57823,4.57414,4.57006,
		4.56599,4.56192,4.55786,4.5538,4.54975,4.5457,4.54166,4.53762,4.53359,
		4.52956,4.52554,4.52153,4.51752,4.51351,4.50951,4.50552,4.50153,4.49755,
		4.49357,4.4896,4.48563,4.48167,4.47771,4.47376,4.46981,4.46587,4.46193,
		4.458,4.45408,4.45016,4.44624,4.44233,4.43843,4.43453,4.43063,4.42674,
		4.42286,4.41898,4.4151,4.41123,4.40737,4.40351,4.39965,4.39581,4.39196,
		4.38812,4.38429,4.38046,4.37664,4.37282,4.369,4.36519,4.36139,4.35759,
		4.3538,4.35001,4.34622,4.34244,4.33867,4.3349,4.33113,4.32738,4.32362,
		4.31987,4.31613,4.31238,4.30865,4.30492,4.30119,4.29747,4.29376,4.29005,
		4.28634,4.28264,4.27894,4.27525,4.27156,4.26788,4.2642,4.26053,4.25686,
		4.2532,4.24954,4.24588,4.24223,4.23859,4.23495,4.23131,4.22768,4.22406,
		4.22044,4.21682,4.21321,4.2096,4.206,4.2024,4.1988,4.19522,4.19163,
		4.18805,4.18448,4.18091,4.17734,4.17378,4.17022,4.16667,4.16312,4.15958,
		4.15604,4.1525,4.14897,4.14545,4.14193,4.13841,4.1349,4.13139,4.12789,
		4.12439,4.1209,4.11741,4.11392,4.11044,4.10696,4.10349,4.10002,4.09656,
		4.0931,4.08965,4.0862,4.08275,4.07931,4.07587,4.07244,4.06901,4.06559,
		4.06217,4.05875,4.05534,4.05193,4.04853,4.04513,4.04174,4.03835,4.03496,
		4.03158,4.0282,4.02483,4.02146,4.0181,4.01474,4.01138,4.00803,4.00468,
		4.00134,3.998,3.99467,3.99133,3.98801,3.98469,3.98137,3.97805,3.97474,
		3.97144,3.96813,3.96484,3.96154,3.95825,3.95497,3.95169,3.94841,3.94514,
		3.94187,3.9386,3.93534,3.93208,3.92883,3.92558,3.92234,3.9191,3.91586,
		3.91263,3.9094,3.90617,3.90295,3.89973,3.89652,3.89331,3.89011,3.88691,
		3.88371,3.88051,3.87733,3.87414,3.87096,3.86778,3.86461,3.86144,3.85827,
		3.85511,3.85195,3.8488,3.84565,3.8425,3.83936,3.83622,3.83308,3.82995,
		3.82683,3.8237,3.82058,3.81747,3.81435,3.81125,3.80814,3.80504,3.80194,
		3.79885,3.79576,3.79268,3.78959,3.78652,3.78344,3.78037,3.7773,3.77424,
		3.77118,3.76813,3.76507,3.76203,3.75898,3.75594,3.7529,3.74987,3.74684,
		3.74381,3.74079,3.73777,3.73476,3.73175,3.72874,3.72573,3.72273,3.71974,
		3.71674,3.71375,3.71077,3.70778,3.7048,3.70183,3.69886,3.69589,3.69292,
		3.68996,3.68701,3.68405,3.6811,3.67815,3.67521,3.67227,3.66933,3.6664,
		3.66347,3.66055,3.65762,3.6547,3.65179,3.64888,3.64597,3.64306,3.64016,
		3.63726,3.63437,3.63148,3.62859,3.62571,3.62282,3.61995,3.61707,3.6142,
		3.61134,3.60847,3.60561,3.60275,3.5999,3.59705,3.5942,3.59136,3.58852,
		3.58568,3.58285,3.58002,3.57719,3.57437,3.57155,3.56873,3.56592,3.56311,
		3.5603,3.5575,3.5547,3.5519,3.54911,3.54632,3.54353,3.54075,3.53797,
		3.53519,3.53242,3.52965,3.52688,3.52412,3.52136,3.5186,3.51584,3.51309,
		3.51035,3.5076,3.50486,3.50212,3.49939,3.49665,3.49393,3.4912,3.48848,
		3.48576,3.48304,3.48033,3.47762,3.47491,3.47221,3.46951,3.46681,3.46412,
		3.46143,3.45874,3.45606,3.45338,3.4507,3.44802,3.44535,3.44268,3.44002,
		3.43735,3.43469,3.43204,3.42938,3.42673,3.42409,3.42144,3.4188,3.41616,
		3.41353,3.4109,3.40827,3.40564,3.40302,3.4004,3.39778,3.39517,3.39256,
		3.38995,3.38734,3.38474,3.38214,3.37955,3.37695,3.37436,3.37178,3.36919,
		3.36661,3.36403,3.36146,3.35889,3.35632,3.35375,3.35119,3.34863,3.34607,
		3.34352,3.34096,3.33842,3.33587,3.33333,3.33079,3.32825,3.32572,3.32319,
		3.32066,3.31813,3.31561,3.31309,3.31057,3.30806,3.30555,3.30304,3.30053,
		3.29803,3.29553,3.29303,3.29054,3.28805,3.28556,3.28307,3.28059,3.27811,
		3.27563,3.27316,3.27069,3.26822,3.26575,3.26329,3.26083,3.25837,3.25592,
		3.25347,3.25102,3.24857,3.24613,3.24368,3.24125,3.23881,3.23638,3.23395,
		3.23152,3.2291,3.22667,3.22426,3.22184,3.21943,3.21701,3.21461,3.2122,
		3.2098,3.2074,3.205,3.2026,3.20021,3.19782,3.19544,3.19305,3.19067,
		3.18829,3.18592,3.18354,3.18117,3.1788,3.17644,3.17407,3.17171,3.16936,
		3.167,3.16465,3.1623,3.15995,3.15761,3.15526,3.15293,3.15059,3.14825,
		3.14592,3.14359,3.14127,3.13894,3.13662,3.1343,3.13199,3.12967,3.12736,
		3.12505,3.12275,3.12044,3.11814,3.11585,3.11355,3.11126,3.10897,3.10668,
		3.10439,3.10211,3.09983,3.09755,3.09527,3.093,3.09073,3.08846,3.0862,
		3.08393,3.08167,3.07942,3.07716,3.07491,3.07266,3.07041,3.06816,3.06592,
		3.06368,3.06144,3.0592,3.05697,3.05474,3.05251,3.05028,3.04806,3.04584,
		3.04362,3.0414,3.03919,3.03698,3.03477,3.03256,3.03036,3.02815,3.02595,
		3.02376,3.02156,3.01937,3.01718,3.01499,3.01281,3.01062,3.00844,3.00627,
		3.00409,3.00192,2.99974,2.99758,2.99541,2.99325,2.99108,2.98892,2.98677,
		2.98461,2.98246,2.98031,2.97816,2.97602,2.97387,2.97173,2.96959,2.96746,
		2.96532,2.96319,2.96106,2.95894,2.95681,2.95469,2.95257,2.95045,2.94834,
		2.94622,2.94411,2.942,2.9399,2.93779,2.93569,2.93359,2.93149,2.9294,
		2.9273,2.92521,2.92312,2.92104,2.91895,2.91687,2.91479,2.91271,2.91064,
		2.90857,2.9065,2.90443,2.90236,2.9003,2.89823,2.89617,2.89412,2.89206,
		2.89001,2.88796,2.88591,2.88386,2.88182,2.87978,2.87773,2.8757,2.87366,
		2.87163,2.8696,2.86757,2.86554,2.86351,2.86149,2.85947,2.85745,2.85544,
		2.85342,2.85141,2.8494,2.84739,2.84538,2.84338,2.84138,2.83938,2.83738,
		2.83539,2.83339,2.8314,2.82941,2.82743,2.82544,2.82346,2.82148,2.8195,
		2.81752,2.81555,2.81358,2.81161,2.80964,2.80767,2.80571,2.80375,2.80179,
		2.79983,2.79787,2.79592,2.79397,2.79202,2.79007,2.78812,2.78618,2.78424,
		2.7823,2.78036,2.77843,2.77649,2.77456,2.77263,2.7707,2.76878,2.76685,
		2.76493,2.76301,2.7611,2.75918,2.75727,2.75536,2.75345,2.75154,2.74963,
		2.74773,2.74583,2.74393,2.74203,2.74013,2.73824,2.73635,2.73446,2.73257,
		2.73069,2.7288,2.72692,2.72504,2.72316,2.72129,2.71941,2.71754,2.71567,
		2.7138,2.71193,2.71007,2.70821,2.70634,2.70449,2.70263,2.70077,2.69892,
		2.69707,2.69522,2.69337,2.69153,2.68968,2.68784,2.686,2.68416,2.68233,
		2.68049,2.67866,2.67683,2.675,2.67318,2.67135,2.66953,2.66771,2.66589,
		2.66407,2.66226,2.66044,2.65863,2.65682,2.65501,2.65321,2.6514,2.6496,
		2.6478,2.646,2.6442,2.64241,2.64061,2.63882,2.63703,2.63524,2.63346,
		2.63167,2.62989,2.62811,2.62633,2.62455,2.62278,2.621,2.61923,2.61746,
		2.61569,2.61393,2.61216,2.6104,2.60864,2.60688,2.60512,2.60337,2.60161,
		2.59986,2.59811,2.59636,2.59462,2.59287,2.59113,2.58939,2.58765,2.58591,
		2.58417,2.58244,2.5807,2.57897,2.57724,2.57552,2.57379,2.57207,2.57034,
		2.56862,2.5669,2.56519,2.56347,2.56176,2.56005,2.55834,2.55663,2.55492,
		2.55322,2.55151,2.54981,2.54811,2.54641,2.54471,2.54302,2.54133,2.53963,
		2.53794,2.53626,2.53457
	};

	int i = int(kf);
	double x = kf-i;

	if(i>2999)
		return 2;//or maybe tablica_Mef[2999];
	else 
		return  MEF[i]*(1-x) + MEF[i+1]*x;
}
